//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.5101.29074.
namespace IS24RestApi.Search.Expose
{
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para xml:lang="de-DE">Expose</para>
    /// <para xml:lang="en">Expose</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("Expose", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("expose", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class Expose
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Expose Informationen der Immobilie.</para>
        /// <para xml:lang="en">The expose informations of an real estate.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("realEstate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ExposeRealEstate RealEstate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Kontaktdaten des Anbieters.</para>
        /// <para xml:lang="en">The contact details from the realtor.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("contactDetails", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ExposeContactDetails ContactDetails { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("imprintLink", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public System.Collections.ObjectModel.Collection<string> ImprintLink { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ImprintLink-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ImprintLink collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImprintLinkSpecified
        {
            get
            {
                return (this.ImprintLink.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Expose" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Expose" /> class.</para>
        /// </summary>
        public Expose()
        {
            this.ImprintLink = new System.Collections.ObjectModel.Collection<string>();
            this.RealtorValuationJSONLink = new System.Collections.ObjectModel.Collection<string>();
            this.RealtorValuationV2JSONLink = new System.Collections.ObjectModel.Collection<string>();
            this.RealtorValuationV2JSONPLink = new System.Collections.ObjectModel.Collection<string>();
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("realtorValuationJSONLink", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public System.Collections.ObjectModel.Collection<string> RealtorValuationJSONLink { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RealtorValuationJSONLink-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the RealtorValuationJSONLink collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RealtorValuationJSONLinkSpecified
        {
            get
            {
                return (this.RealtorValuationJSONLink.Count != 0);
            }
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("realtorValuationV2JSONLink", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public System.Collections.ObjectModel.Collection<string> RealtorValuationV2JSONLink { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RealtorValuationV2JSONLink-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the RealtorValuationV2JSONLink collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RealtorValuationV2JSONLinkSpecified
        {
            get
            {
                return (this.RealtorValuationV2JSONLink.Count != 0);
            }
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("realtorValuationV2JSONPLink", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public System.Collections.ObjectModel.Collection<string> RealtorValuationV2JSONPLink { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RealtorValuationV2JSONPLink-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the RealtorValuationV2JSONPLink collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RealtorValuationV2JSONPLinkSpecified
        {
            get
            {
                return (this.RealtorValuationV2JSONPLink.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">unternehmensweite Kunden-ID</para>
        /// <para xml:lang="en">Company wide customer ID</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("companyWideCustomerId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string CompanyWideCustomerId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Definition welche Daten im Kontaktformular angezeigt werden soll.</para>
        /// <para xml:lang="en">Determines which fields are shown in the contact form.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("contactFormConfiguration", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ContactFormConfiguration ContactFormConfiguration { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Link zum Element.</para>
        /// <para xml:lang="en">Link to the entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string Href { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Id-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lesbarer Name des Elements (wenn vorhanden).</para>
        /// <para xml:lang="en">Human readable name of the entity (if it exists).</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("label", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Label { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("modification", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime Modification { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Modification-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Modification property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModificationSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("creation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime Creation { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Creation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Creation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreationSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("publishDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime PublishDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublishDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublishDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PublishDateSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Dieses Attribut liefert den ausgewaehlten Kontaktformular-Typ, der definiert, welche Felder im Kontaktformular ausgefuellt werden muessen. Kontaktmoeglichkeiten koennen EMAIL (Schnellkontakt: Nachname und E-Mail-Adresse), PHONE (Nachname und Telefonnummer) und LONG (Nachname, E-Mail-Adresse, Telefonnummer und Anschrift (inkl. Strasse, Hausnummer, PLZ und Ort)) sein.</para>
        /// <para xml:lang="en">This attribute provides the selected type of the contact form, specified all fields of them. The kinds of contacts are: EMAIL (quick contact: name and eMail) PHONE (name and phone) LONG (name, eMail, phone and address (including street, number, ZIP and city)).</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("contactFormType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ContactFormType ContactFormType { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Allgemeine Elemente für alle Immobilienarten im Expose.
    ///      </para>
    /// <para xml:lang="en">General elements for all real estates for the expose.
    ///      </para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("ExposeRealEstate", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ApartmentBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ApartmentRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AssistedLiving))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CompulsoryAuction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FlatShareRoom))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GarageBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GarageRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Gastronomy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HouseBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HouseRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HouseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Industry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InvestmentProperty))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LivingBuySite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LivingRentSite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Office))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SeniorCare))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShortTermAccommodation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpecialPurpose))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Store))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TradeSite))]
    public partial class ExposeRealEstate : IS24RestApi.Common.AbstractRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Veröffentlichungsstatus der Immobilie.</para>
        /// <para xml:lang="en">publication state of the real estate.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("state", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateState State { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Der erste Bildanhang dieser Immobilie</para>
        /// <para xml:lang="en">The first picture attachment of this real estate
        ///              </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("titlePicture", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Picture TitlePicture { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundriss als Objektbild vorhanden</para>
        /// <para xml:lang="en">has as attachment a floorplan</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("floorplan", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Floorplan { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Floorplan-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Floorplan property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FloorplanSpecified { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("ImprintLink", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class ImprintLink
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Link zum Element.</para>
        /// <para xml:lang="en">Link to the entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string Href { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("realtorValuationJSONLink", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class RealtorValuationJSONLink
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">URL für die Makler Bewertung mit Ausgabe in JSON Format</para>
        /// <para xml:lang="en">URL for realtor valuation service with json as response</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string Href { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("realtorValuationJSONPLink", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class RealtorValuationJSONPLink
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">URL für die Makler Bewertung mit Ausgabe in JSONP Format (JAVASCRIPT)</para>
        /// <para xml:lang="en">URL for realtor valuation service with jsonp as response (JAVASCRIPT)</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string Href { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Definition welche Daten im Kontaktformular angezeigt werden soll.</para>
    /// <para xml:lang="en">Determines which fields are shown in the contact form.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("ContactFormConfiguration", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class ContactFormConfiguration
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">gewuenschtes Einzugsdatum</para>
        /// <para xml:lang="en">moveInDate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("moveInDateField", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.MandatoryOptionalType MoveInDateField { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MoveInDateField-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MoveInDateField property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MoveInDateFieldSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Tiere im Haushalt</para>
        /// <para xml:lang="en">pets in household</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("petsInHouseholdField", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.MandatoryOptionalType PetsInHouseholdField { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PetsInHouseholdField-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PetsInHouseholdField property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PetsInHouseholdFieldSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der Personen im Haushalt</para>
        /// <para xml:lang="en">number of persons</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfPersonsField", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.MandatoryOptionalType NumberOfPersonsField { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfPersonsField-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfPersonsField property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfPersonsFieldSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Beschaeftigungsverhaeltnis</para>
        /// <para xml:lang="en">employment relationship</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("employmentRelationshipField", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.MandatoryOptionalType EmploymentRelationshipField { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EmploymentRelationshipField-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmploymentRelationshipField property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmploymentRelationshipFieldSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Monatliches Nettohaushaltseinkommen</para>
        /// <para xml:lang="en">Monthly Income of household</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("incomeField", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.MandatoryOptionalType IncomeField { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IncomeField-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IncomeField property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeFieldSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Vorname</para>
        /// <para xml:lang="en">firstname</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("firstnameField", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.MandatoryOptionalType FirstnameField { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FirstnameField-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstnameField property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FirstnameFieldSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nachname</para>
        /// <para xml:lang="en">lastname</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lastnameField", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.MandatoryOptionalType LastnameField { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Telefonnummer</para>
        /// <para xml:lang="en">phone number</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("phoneNumberField", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.MandatoryOptionalType PhoneNumberField { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PhoneNumberField-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PhoneNumberField property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhoneNumberFieldSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Email Adresse</para>
        /// <para xml:lang="en">email address</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("emailAddressField", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.MandatoryOptionalType EmailAddressField { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EmailAddressField-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmailAddressField property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmailAddressFieldSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Adresse</para>
        /// <para xml:lang="en">address</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("addressField", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.MandatoryOptionalType AddressField { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AddressField-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddressField property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddressFieldSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Schufa Information</para>
        /// <para xml:lang="en">Schufa Information</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("schufaInformationField", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.MandatoryOptionalType SchufaInformationField { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SchufaInformationField-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SchufaInformationField property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SchufaInformationFieldSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anrede</para>
        /// <para xml:lang="en">title</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("titleField", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.MandatoryOptionalType TitleField { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TitleField-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TitleField property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TitleFieldSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Freitext Feld</para>
        /// <para xml:lang="en">free text message</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("freeTextField", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.MandatoryOptionalType FreeTextField { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FreeTextField-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FreeTextField property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreeTextFieldSpecified { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("webContent", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0", AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute("webContent", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class WebContent
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Angebot melden Url</para>
        /// <para xml:lang="en">fraudUrlForExpose</para>
        /// <para xml:lang="en">Maximum length: 300.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(300)]
        [System.Xml.Serialization.XmlElementAttribute("reportAFraudURL", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string ReportAFraudURL { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">print view url für Expose</para>
        /// <para xml:lang="en">Print view url for expose</para>
        /// <para xml:lang="en">Maximum length: 300.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(300)]
        [System.Xml.Serialization.XmlElementAttribute("exposePrintUrl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string ExposePrintUrl { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Kontakt Request zum kontaktieren eines Anbieters</para>
    /// <para xml:lang="en">contact form request to contact an realtor</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("ContactForm", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("contactForm", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class ContactForm
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vorname</para>
        /// <para xml:lang="en">firstname</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("firstname", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Firstname { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nachname</para>
        /// <para xml:lang="en">lastname</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("lastname", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Lastname { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Telefonnummer</para>
        /// <para xml:lang="en">phone number</para>
        /// <para xml:lang="en">Maximum length: 40.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(40)]
        [System.Xml.Serialization.XmlElementAttribute("phoneNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PhoneNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Email Adresse</para>
        /// <para xml:lang="en">email address</para>
        /// <para xml:lang="en">Maximum length: 150.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(150)]
        [System.Xml.Serialization.XmlElementAttribute("emailAddress", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string EmailAddress { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Besichtigungstermin erwünscht</para>
        /// <para xml:lang="en">appointment request</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("appointmentRequested", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType AppointmentRequested { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AppointmentRequested-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AppointmentRequested property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AppointmentRequestedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anmerkung</para>
        /// <para xml:lang="en">message</para>
        /// <para xml:lang="en">Maximum length: 2000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2000)]
        [System.Xml.Serialization.XmlElementAttribute("message", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Message { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Adresse</para>
        /// <para xml:lang="en">address</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("address", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Address Address { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">kundenspezifischer Style der Kontaktanfrage</para>
        /// <para xml:lang="en">customized style of contact mails</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("contactMailCustomStyle", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ContactMailCustomStyle ContactMailCustomStyle { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">gewuenschtes Einzugsdatum</para>
        /// <para xml:lang="en">moveInDate</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("moveInDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MoveInDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Tiere im Haushalt</para>
        /// <para xml:lang="en">pets in household</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("petsInHousehold", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PetsInHousehold { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der Personen im Haushalt</para>
        /// <para xml:lang="en">number of persons</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("numberOfPersons", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string NumberOfPersons { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Beschaeftigungsverhaeltnis</para>
        /// <para xml:lang="en">employment relationship</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("employmentRelationship", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EmploymentRelationshipType EmploymentRelationship { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EmploymentRelationship-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmploymentRelationship property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmploymentRelationshipSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Monatliches Nettohaushaltseinkommen</para>
        /// <para xml:lang="en">Monthly Income of household</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("income", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IncomeRangeType Income { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Income-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Income property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Dieses Attribut liefert den ausgewaehlten Kontaktformular-Typ, der definiert, welche Felder im Kontaktformular ausgefuellt werden muessen. Kontaktmoeglichkeiten koennen EMAIL (Schnellkontakt: Nachname und E-Mail-Adresse), PHONE (Nachname und Telefonnummer) und LONG (Nachname, E-Mail-Adresse, Telefonnummer und Anschrift (inkl. Strasse, Hausnummer, PLZ und Ort)) sein.</para>
        /// <para xml:lang="en">This attribute provides the selected type of the contact form, specified all fields of them. The kinds of contacts are: EMAIL (quick contact: name and eMail) PHONE (name and phone) LONG (name, eMail, phone and address (including street, number, ZIP and city)).</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("contactFormType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ContactFormType ContactFormType { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Aufzaehlung fuer Beschaeftigungsverhaeltnisse</para>
    /// <para xml:lang="en">Enumeration for Employment Relationships</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Xml.Serialization.XmlTypeAttribute("EmploymentRelationshipType", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public enum EmploymentRelationshipType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Angestellter</para>
        /// <para xml:lang="en">employee</para>
        /// </summary>
        EMPLOYEE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Selbststaendig</para>
        /// <para xml:lang="en">freelancer</para>
        /// </summary>
        FREELANCER,
        
        /// <summary>
        /// <para xml:lang="de-DE">Beamter</para>
        /// <para xml:lang="en">official</para>
        /// </summary>
        OFFICIAL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Rentner</para>
        /// <para xml:lang="en">pensioner</para>
        /// </summary>
        PENSIONER,
        
        /// <summary>
        /// <para xml:lang="de-DE">Arbeitssuchend</para>
        /// <para xml:lang="en">seekingEmployment</para>
        /// </summary>
        SEEKING_EMPLOYMENT,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Monatliches Nettohaushaltseinkommen</para>
    /// <para xml:lang="en">Monthly income of household</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Xml.Serialization.XmlTypeAttribute("IncomeRangeType", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public enum IncomeRangeType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">&lt; 1000 Euro</para>
        /// <para xml:lang="en">&lt; 1000 Euro</para>
        /// </summary>
        RANGE_0_1000,
        
        /// <summary>
        /// <para xml:lang="de-DE">1000 bis 2000 Euro</para>
        /// <para xml:lang="en">1000 up to 2000 Euro</para>
        /// </summary>
        RANGE_1000_2000,
        
        /// <summary>
        /// <para xml:lang="de-DE">2000 bis 3000 Euro</para>
        /// <para xml:lang="en">2000 up to 3000 Euro</para>
        /// </summary>
        RANGE_2000_3000,
        
        /// <summary>
        /// <para xml:lang="de-DE">3000 bis 4000 Euro</para>
        /// <para xml:lang="en">3000 up to 4000 Euro</para>
        /// </summary>
        RANGE_3000_4000,
        
        /// <summary>
        /// <para xml:lang="de-DE">4000 bis 5000 Euro</para>
        /// <para xml:lang="en">4000 up to 5000 Euro</para>
        /// </summary>
        RANGE_4000_5000,
        
        /// <summary>
        /// <para xml:lang="de-DE">&gt; 5000 Euro</para>
        /// <para xml:lang="en">&gt; 5000 Euro</para>
        /// </summary>
        RANGE_5000_MAX,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Formular zur Weiterleitung an weitere Interessierte</para>
    /// <para xml:lang="en">form request to forward to an also interested customer</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("SendAFriendForm", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    [System.Xml.Serialization.XmlRootAttribute("sendAFriendForm", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class SendAFriendForm
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Name des Empfängers</para>
        /// <para xml:lang="en">name of recipient</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("recipientName", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RecipientName { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Email Adresse des Empfängers</para>
        /// <para xml:lang="en">email address of recipient</para>
        /// <para xml:lang="en">Maximum length: 150.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(150)]
        [System.Xml.Serialization.XmlElementAttribute("recipientEmail", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RecipientEmail { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Name des Versenders</para>
        /// <para xml:lang="en">name of sender</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("senderName", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SenderName { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Email Adresse des Versenders</para>
        /// <para xml:lang="en">email address of sender</para>
        /// <para xml:lang="en">Maximum length: 150.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(150)]
        [System.Xml.Serialization.XmlElementAttribute("senderEmail", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SenderEmail { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anmerkung</para>
        /// <para xml:lang="en">comment</para>
        /// <para xml:lang="en">Maximum length: 2000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2000)]
        [System.Xml.Serialization.XmlElementAttribute("comment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Comment { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Impressum vom Exposeanbieter.</para>
    /// <para xml:lang="en">Impressum/Imprint of the expose realtor.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Xml.Serialization.XmlRootAttribute("imprint", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class Imprint : IS24RestApi.Common.Imprint
    {
    }
    
    /// <summary>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("video", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0", AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute("video", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class Video
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">streaming video url Liste von screen9</para>
        /// <para xml:lang="en">screen9 streaming video url list</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("videoUrlList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<VideoUrlList> VideoUrlList { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Video" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Video" /> class.</para>
        /// </summary>
        public Video()
        {
            this.VideoUrlList = new Collection<VideoUrlList>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Video Abspieldauer in ms</para>
        /// <para xml:lang="en">Video duration in ms</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("duration", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long Duration { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Duration-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Duration property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DurationSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teaser Bild für das gegebene Video</para>
        /// <para xml:lang="en">Picture teaser for this video</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("teaserUrl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string TeaserUrl { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Titel vom Video</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">Title of the video</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("title", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Title { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">eine Entität einer screen9 streaming video url mit dem video Format</para>
    /// <para xml:lang="en">screen9 single entity for one url</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("videoUrlList", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class VideoUrlList
    {
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("format", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Format { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Url { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Haus-Kauf Immobilientyp</para>
    /// <para xml:lang="en">Elements for the House-Buy realestate type</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("HouseBuy", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class HouseBuy : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Einliegerwohnung</para>
        /// <para xml:lang="en">lodger flat</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lodgerFlat", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType LodgerFlat { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LodgerFlat-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LodgerFlat property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LodgerFlatSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bauphase</para>
        /// <para xml:lang="en">construction phase</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("constructionPhase", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ConstructionPhaseType ConstructionPhase { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionPhase-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionPhase property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionPhaseSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private IS24RestApi.Common.BuildingType _buildingType = IS24RestApi.Common.BuildingType.NO_INFORMATION;
        
        /// <summary>
        /// <para xml:lang="de-DE">Gebäudeart</para>
        /// <para xml:lang="en">building type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BuildingType BuildingType
        {
            get
            {
                return this._buildingType;
            }
            set
            {
                this._buildingType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">cellar</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cellar", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Cellar { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Cellar-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cellar property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CellarSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">handicapped accessible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("handicappedAccessible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType HandicappedAccessible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HandicappedAccessible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HandicappedAccessible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HandicappedAccessibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Parkflächenanzahl</para>
        /// <para xml:lang="en">number of parking spaces</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "99999")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfParkingSpaces", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfParkingSpaces { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfParkingSpaces-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfParkingSpaces property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfParkingSpacesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("condition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateCondition Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Condition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letzte Modernisierung</para>
        /// <para xml:lang="en">last refurbishment</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "9999")]
        [System.Xml.Serialization.XmlElementAttribute("lastRefurbishment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int LastRefurbishment { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastRefurbishment-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastRefurbishment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefurbishmentSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Qualität der Ausstattung</para>
        /// <para xml:lang="en">interior quality</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("interiorQuality", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.InteriorQuality InteriorQuality { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InteriorQuality-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InteriorQuality property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InteriorQualitySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "9999")]
        [System.Xml.Serialization.XmlElementAttribute("constructionYear", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int ConstructionYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionYear-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionYearSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezugsfrei ab</para>
        /// <para xml:lang="en">free from</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("freeFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FreeFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HeatingType HeatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Befeuerungsarten</para>
        /// <para xml:lang="en">firing types</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("firingTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("firingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.FiringType> FiringTypes { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FiringTypes-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FiringTypes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiringTypesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="HouseBuy" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="HouseBuy" /> class.</para>
        /// </summary>
        public HouseBuy()
        {
            this.FiringTypes = new Collection<IS24RestApi.Common.FiringType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweistyp</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingEnergyRatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BuildingEnergyRatingType BuildingEnergyRatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuildingEnergyRatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuildingEnergyRatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuildingEnergyRatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.99.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(double), "0", "999.99")]
        [System.Xml.Serialization.XmlElementAttribute("thermalCharacteristic", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ThermalCharacteristic { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ThermalCharacteristic-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThermalCharacteristic property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThermalCharacteristicSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyConsumptionContainsWarmWater", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType EnergyConsumptionContainsWarmWater { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyConsumptionContainsWarmWater-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyConsumptionContainsWarmWater property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyConsumptionContainsWarmWaterSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenzahl</para>
        /// <para xml:lang="en">number of floors</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "999")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfFloors", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfFloors { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfFloors-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfFloors property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfFloorsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzfläche</para>
        /// <para xml:lang="en">usable floor space</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("usableFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double UsableFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UsableFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsableFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsableFloorSpaceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Schlafzimmer</para>
        /// <para xml:lang="en">number of bed rooms</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "99")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfBedRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfBedRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfBedRooms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfBedRooms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfBedRoomsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Badezimmer</para>
        /// <para xml:lang="en">number of bath rooms</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "99")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfBathRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfBathRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfBathRooms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfBathRooms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfBathRoomsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gästetoilette</para>
        /// <para xml:lang="en">guest toilet</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("guestToilet", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType GuestToilet { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuestToilet-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuestToilet property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GuestToiletSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz</para>
        /// <para xml:lang="en">parking space type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSpaceType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ParkingSpaceType ParkingSpaceType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingSpaceType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingSpaceType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpaceTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermietet</para>
        /// <para xml:lang="en">rented</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("rented", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Rented { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Rented-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Rented property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RentedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mieteinnahmen pro Monat</para>
        /// <para xml:lang="en">rental income</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("rentalIncome", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double RentalIncome { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RentalIncome-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RentalIncome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RentalIncomeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Denkmalschutzobjekt</para>
        /// <para xml:lang="en">monument</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("listed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Listed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Listed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Listed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ListedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz-Kaufpreis</para>
        /// <para xml:lang="en">parking space price</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSpacePrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ParkingSpacePrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingSpacePrice-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingSpacePrice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpacePriceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Als Ferienhaus geeignet</para>
        /// <para xml:lang="en">summer residence practical</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("summerResidencePractical", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType SummerResidencePractical { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SummerResidencePractical-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SummerResidencePractical property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SummerResidencePracticalSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an.
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms of a house</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(double), "0", "999")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyPerformanceCertificate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool EnergyPerformanceCertificate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyPerformanceCertificate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyPerformanceCertificate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyPerformanceCertificateSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Haus-Miete Immobilientyp</para>
    /// <para xml:lang="en">Elements for the House-Rent realestate type</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("HouseRent", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class HouseRent : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an.
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms of a house</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(double), "0", "999")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyPerformanceCertificate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool EnergyPerformanceCertificate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyPerformanceCertificate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyPerformanceCertificate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyPerformanceCertificateSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private IS24RestApi.Common.BuildingType _buildingType = IS24RestApi.Common.BuildingType.NO_INFORMATION;
        
        /// <summary>
        /// <para xml:lang="de-DE">Gebäudeart</para>
        /// <para xml:lang="en">building type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BuildingType BuildingType
        {
            get
            {
                return this._buildingType;
            }
            set
            {
                this._buildingType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">cellar</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cellar", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Cellar { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Cellar-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cellar property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CellarSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">handicapped accessible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("handicappedAccessible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType HandicappedAccessible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HandicappedAccessible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HandicappedAccessible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HandicappedAccessibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Parkflächenanzahl</para>
        /// <para xml:lang="en">number of parking spaces</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "99999")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfParkingSpaces", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfParkingSpaces { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfParkingSpaces-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfParkingSpaces property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfParkingSpacesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("condition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateCondition Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Condition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letzte Modernisierung</para>
        /// <para xml:lang="en">last refurbishment</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "9999")]
        [System.Xml.Serialization.XmlElementAttribute("lastRefurbishment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int LastRefurbishment { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastRefurbishment-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastRefurbishment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefurbishmentSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Qualität der Ausstattung</para>
        /// <para xml:lang="en">interior quality</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("interiorQuality", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.InteriorQuality InteriorQuality { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InteriorQuality-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InteriorQuality property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InteriorQualitySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "9999")]
        [System.Xml.Serialization.XmlElementAttribute("constructionYear", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int ConstructionYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionYear-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionYearSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezugsfrei ab</para>
        /// <para xml:lang="en">free from</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("freeFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FreeFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HeatingType HeatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Befeuerungsarten</para>
        /// <para xml:lang="en">firing types</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("firingTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("firingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.FiringType> FiringTypes { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FiringTypes-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FiringTypes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiringTypesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="HouseRent" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="HouseRent" /> class.</para>
        /// </summary>
        public HouseRent()
        {
            this.FiringTypes = new Collection<IS24RestApi.Common.FiringType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweistyp</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingEnergyRatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BuildingEnergyRatingType BuildingEnergyRatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuildingEnergyRatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuildingEnergyRatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuildingEnergyRatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.99.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(double), "0", "999.99")]
        [System.Xml.Serialization.XmlElementAttribute("thermalCharacteristic", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ThermalCharacteristic { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ThermalCharacteristic-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThermalCharacteristic property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThermalCharacteristicSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyConsumptionContainsWarmWater", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType EnergyConsumptionContainsWarmWater { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyConsumptionContainsWarmWater-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyConsumptionContainsWarmWater property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyConsumptionContainsWarmWaterSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenzahl</para>
        /// <para xml:lang="en">number of floors</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "999")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfFloors", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfFloors { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfFloors-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfFloors property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfFloorsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzfläche</para>
        /// <para xml:lang="en">usable floor space</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("usableFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double UsableFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UsableFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsableFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsableFloorSpaceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Schlafzimmer</para>
        /// <para xml:lang="en">number of bed rooms</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "99")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfBedRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfBedRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfBedRooms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfBedRooms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfBedRoomsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Badezimmer</para>
        /// <para xml:lang="en">number of bath rooms</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "99")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfBathRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfBathRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfBathRooms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfBathRooms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfBathRoomsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gästetoilette</para>
        /// <para xml:lang="en">guest toilet</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("guestToilet", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType GuestToilet { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuestToilet-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuestToilet property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GuestToiletSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz</para>
        /// <para xml:lang="en">parking space type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSpaceType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ParkingSpaceType ParkingSpaceType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingSpaceType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingSpaceType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpaceTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaltmiete</para>
        /// <para xml:lang="en">base rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("baseRent", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double BaseRent { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Warmmiete</para>
        /// <para xml:lang="en">total rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("totalRent", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalRent { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalRent-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalRent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalRentSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenkosten</para>
        /// <para xml:lang="en">service charge</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("serviceCharge", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ServiceCharge { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ServiceCharge-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ServiceCharge property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServiceChargeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaution</para>
        /// <para xml:lang="de-DE">Kaution</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("deposit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Deposit { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungskosten</para>
        /// <para xml:lang="en">heating costs</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingCosts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double HeatingCosts { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingCosts-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingCosts property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingCostsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizkosten in Nebenkosten enthalten</para>
        /// <para xml:lang="en">heating costs in service charge</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingCostsInServiceCharge", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType HeatingCostsInServiceCharge { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingCostsInServiceCharge-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingCostsInServiceCharge property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingCostsInServiceChargeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Haustiere erlaubt</para>
        /// <para xml:lang="en">pets allowed</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("petsAllowed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.PetsAllowedType PetsAllowed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PetsAllowed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PetsAllowed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PetsAllowedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Stellplatzmiete</para>
        /// <para xml:lang="en">parking space price</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSpacePrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ParkingSpacePrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingSpacePrice-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingSpacePrice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpacePriceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">"WG-geeigne</para>
        /// <para xml:lang="en">usable as flat share room</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("useAsFlatshareRoom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType UseAsFlatshareRoom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UseAsFlatshareRoom-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UseAsFlatshareRoom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseAsFlatshareRoomSpecified { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("builtInKitchen", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BuiltInKitchen { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("assistedLiving", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool AssistedLiving { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Wohnung-Miete Immobilientyp</para>
    /// <para xml:lang="en">Elements for the Apartment-Rent realestate type</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("ApartmentRent", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class ApartmentRent : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnungstyp</para>
        /// <para xml:lang="en">apartment type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("apartmentType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ApartmentType ApartmentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApartmentType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApartmentType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApartmentTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etage</para>
        /// <para xml:lang="en">floor</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("floor", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int Floor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Floor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Floor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FloorSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lift", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Lift { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Lift-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lift property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LiftSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED Behindertengerecht,
        ///                        LivingInformation.handicappedAccessible ist zu verwenden
        ///                    </para>
        /// <para xml:lang="en">DEPRECATED assisted living, use
        ///                        LivingInformation.handicappedAccessible
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("assistedLiving", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool AssistedLiving { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AssistedLiving-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AssistedLiving property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssistedLivingSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">cellar</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cellar", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Cellar { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Cellar-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cellar property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CellarSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">handicapped accessible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("handicappedAccessible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType HandicappedAccessible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HandicappedAccessible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HandicappedAccessible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HandicappedAccessibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Parkflächenanzahl</para>
        /// <para xml:lang="en">number of parking spaces</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "99999")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfParkingSpaces", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfParkingSpaces { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfParkingSpaces-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfParkingSpaces property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfParkingSpacesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("condition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateCondition Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Condition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letzte Modernisierung</para>
        /// <para xml:lang="en">last refurbishment</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "9999")]
        [System.Xml.Serialization.XmlElementAttribute("lastRefurbishment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int LastRefurbishment { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastRefurbishment-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastRefurbishment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefurbishmentSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Qualität der Ausstattung</para>
        /// <para xml:lang="en">interior quality</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("interiorQuality", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.InteriorQuality InteriorQuality { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InteriorQuality-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InteriorQuality property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InteriorQualitySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "9999")]
        [System.Xml.Serialization.XmlElementAttribute("constructionYear", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int ConstructionYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionYear-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionYearSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezugsfrei ab</para>
        /// <para xml:lang="en">free from</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("freeFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FreeFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HeatingType HeatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Befeuerungsarten</para>
        /// <para xml:lang="en">firing types</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("firingTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("firingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.FiringType> FiringTypes { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FiringTypes-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FiringTypes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiringTypesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ApartmentRent" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ApartmentRent" /> class.</para>
        /// </summary>
        public ApartmentRent()
        {
            this.FiringTypes = new Collection<IS24RestApi.Common.FiringType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweistyp</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingEnergyRatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BuildingEnergyRatingType BuildingEnergyRatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuildingEnergyRatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuildingEnergyRatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuildingEnergyRatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.99.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(double), "0", "999.99")]
        [System.Xml.Serialization.XmlElementAttribute("thermalCharacteristic", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ThermalCharacteristic { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ThermalCharacteristic-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThermalCharacteristic property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThermalCharacteristicSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyConsumptionContainsWarmWater", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType EnergyConsumptionContainsWarmWater { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyConsumptionContainsWarmWater-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyConsumptionContainsWarmWater property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyConsumptionContainsWarmWaterSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenzahl</para>
        /// <para xml:lang="en">number of floors</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "999")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfFloors", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfFloors { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfFloors-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfFloors property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfFloorsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzfläche</para>
        /// <para xml:lang="en">usable floor space</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("usableFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double UsableFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UsableFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsableFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsableFloorSpaceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Schlafzimmer</para>
        /// <para xml:lang="en">number of bed rooms</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "99")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfBedRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfBedRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfBedRooms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfBedRooms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfBedRoomsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Badezimmer</para>
        /// <para xml:lang="en">number of bath rooms</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "99")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfBathRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfBathRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfBathRooms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfBathRooms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfBathRoomsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gästetoilette</para>
        /// <para xml:lang="en">guest toilet</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("guestToilet", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType GuestToilet { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuestToilet-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuestToilet property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GuestToiletSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz</para>
        /// <para xml:lang="en">parking space type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSpaceType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ParkingSpaceType ParkingSpaceType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingSpaceType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingSpaceType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpaceTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaltmiete</para>
        /// <para xml:lang="en">base rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("baseRent", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double BaseRent { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Warmmiete</para>
        /// <para xml:lang="en">total rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("totalRent", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalRent { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalRent-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalRent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalRentSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenkosten</para>
        /// <para xml:lang="en">service charge</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("serviceCharge", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ServiceCharge { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ServiceCharge-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ServiceCharge property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServiceChargeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaution</para>
        /// <para xml:lang="de-DE">Kaution</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("deposit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Deposit { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungskosten</para>
        /// <para xml:lang="en">heating costs</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingCosts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double HeatingCosts { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingCosts-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingCosts property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingCostsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizkosten in Nebenkosten enthalten</para>
        /// <para xml:lang="en">heating costs in service charge</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingCostsInServiceCharge", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType HeatingCostsInServiceCharge { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingCostsInServiceCharge-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingCostsInServiceCharge property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingCostsInServiceChargeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Haustiere erlaubt</para>
        /// <para xml:lang="en">pets allowed</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("petsAllowed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.PetsAllowedType PetsAllowed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PetsAllowed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PetsAllowed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PetsAllowedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Stellplatzmiete</para>
        /// <para xml:lang="en">parking space price</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSpacePrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ParkingSpacePrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingSpacePrice-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingSpacePrice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpacePriceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">"WG-geeigne</para>
        /// <para xml:lang="en">usable as flat share room</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("useAsFlatshareRoom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType UseAsFlatshareRoom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UseAsFlatshareRoom-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UseAsFlatshareRoom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UseAsFlatshareRoomSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms of an apartment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is a information about the energie index available
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyPerformanceCertificate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool EnergyPerformanceCertificate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyPerformanceCertificate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyPerformanceCertificate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyPerformanceCertificateSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einbauküche</para>
        /// <para xml:lang="en">has a built-in kitchen</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("builtInKitchen", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BuiltInKitchen { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuiltInKitchen-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuiltInKitchen property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuiltInKitchenSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("balcony", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Balcony { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Balcony-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Balcony property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BalconySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnberechtigungsschein</para>
        /// <para xml:lang="en">needs certificate of eligibility</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("certificateOfEligibilityNeeded", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool CertificateOfEligibilityNeeded { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CertificateOfEligibilityNeeded-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CertificateOfEligibilityNeeded property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CertificateOfEligibilityNeededSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("garden", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Garden { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Garden-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Garden property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GardenSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Wohnung-Kauf Immobilientyp</para>
    /// <para xml:lang="en">Elements for the Apartment-Buy realestate type</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("ApartmentBuy", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class ApartmentBuy : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnungstyp</para>
        /// <para xml:lang="en">apartment type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("apartmentType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ApartmentType ApartmentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApartmentType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApartmentType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApartmentTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etage</para>
        /// <para xml:lang="en">floor</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("floor", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int Floor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Floor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Floor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FloorSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lift", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Lift { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Lift-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lift property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LiftSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED Behindertengerecht,
        ///                        LivingInformation.handicappedAccessible ist zu verwenden
        ///                    </para>
        /// <para xml:lang="en">DEPRECATED assisted living, use
        ///                        LivingInformation.handicappedAccessible
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("assistedLiving", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool AssistedLiving { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AssistedLiving-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AssistedLiving property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssistedLivingSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">cellar</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cellar", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Cellar { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Cellar-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cellar property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CellarSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">handicapped accessible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("handicappedAccessible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType HandicappedAccessible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HandicappedAccessible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HandicappedAccessible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HandicappedAccessibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Parkflächenanzahl</para>
        /// <para xml:lang="en">number of parking spaces</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "99999")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfParkingSpaces", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfParkingSpaces { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfParkingSpaces-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfParkingSpaces property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfParkingSpacesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("condition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateCondition Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Condition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letzte Modernisierung</para>
        /// <para xml:lang="en">last refurbishment</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "9999")]
        [System.Xml.Serialization.XmlElementAttribute("lastRefurbishment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int LastRefurbishment { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastRefurbishment-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastRefurbishment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefurbishmentSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Qualität der Ausstattung</para>
        /// <para xml:lang="en">interior quality</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("interiorQuality", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.InteriorQuality InteriorQuality { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InteriorQuality-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InteriorQuality property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InteriorQualitySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "9999")]
        [System.Xml.Serialization.XmlElementAttribute("constructionYear", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int ConstructionYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionYear-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionYearSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezugsfrei ab</para>
        /// <para xml:lang="en">free from</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("freeFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FreeFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HeatingType HeatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Befeuerungsarten</para>
        /// <para xml:lang="en">firing types</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("firingTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("firingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.FiringType> FiringTypes { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FiringTypes-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FiringTypes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiringTypesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ApartmentBuy" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ApartmentBuy" /> class.</para>
        /// </summary>
        public ApartmentBuy()
        {
            this.FiringTypes = new Collection<IS24RestApi.Common.FiringType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweistyp</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingEnergyRatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BuildingEnergyRatingType BuildingEnergyRatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuildingEnergyRatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuildingEnergyRatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuildingEnergyRatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.99.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(double), "0", "999.99")]
        [System.Xml.Serialization.XmlElementAttribute("thermalCharacteristic", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ThermalCharacteristic { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ThermalCharacteristic-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThermalCharacteristic property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThermalCharacteristicSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyConsumptionContainsWarmWater", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType EnergyConsumptionContainsWarmWater { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyConsumptionContainsWarmWater-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyConsumptionContainsWarmWater property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyConsumptionContainsWarmWaterSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenzahl</para>
        /// <para xml:lang="en">number of floors</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "999")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfFloors", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfFloors { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfFloors-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfFloors property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfFloorsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzfläche</para>
        /// <para xml:lang="en">usable floor space</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("usableFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double UsableFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UsableFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsableFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsableFloorSpaceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Schlafzimmer</para>
        /// <para xml:lang="en">number of bed rooms</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "99")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfBedRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfBedRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfBedRooms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfBedRooms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfBedRoomsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Badezimmer</para>
        /// <para xml:lang="en">number of bath rooms</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "99")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfBathRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfBathRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfBathRooms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfBathRooms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfBathRoomsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gästetoilette</para>
        /// <para xml:lang="en">guest toilet</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("guestToilet", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType GuestToilet { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuestToilet-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuestToilet property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GuestToiletSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz</para>
        /// <para xml:lang="en">parking space type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSpaceType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ParkingSpaceType ParkingSpaceType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingSpaceType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingSpaceType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpaceTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermietet</para>
        /// <para xml:lang="en">rented</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("rented", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Rented { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Rented-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Rented property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RentedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mieteinnahmen pro Monat</para>
        /// <para xml:lang="en">rental income</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("rentalIncome", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double RentalIncome { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RentalIncome-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RentalIncome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RentalIncomeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Denkmalschutzobjekt</para>
        /// <para xml:lang="en">monument</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("listed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Listed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Listed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Listed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ListedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz-Kaufpreis</para>
        /// <para xml:lang="en">parking space price</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSpacePrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ParkingSpacePrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingSpacePrice-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingSpacePrice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpacePriceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Als Ferienhaus geeignet</para>
        /// <para xml:lang="en">summer residence practical</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("summerResidencePractical", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType SummerResidencePractical { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SummerResidencePractical-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SummerResidencePractical property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SummerResidencePracticalSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms of an apartment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is a information about the energie index available
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyPerformanceCertificate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool EnergyPerformanceCertificate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyPerformanceCertificate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyPerformanceCertificate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyPerformanceCertificateSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einbauküche</para>
        /// <para xml:lang="en">has a built-in kitchen</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("builtInKitchen", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BuiltInKitchen { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuiltInKitchen-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuiltInKitchen property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuiltInKitchenSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("balcony", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Balcony { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Balcony-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Balcony property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BalconySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnberechtigungsschein</para>
        /// <para xml:lang="en">needs certificate of eligibility</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("certificateOfEligibilityNeeded", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool CertificateOfEligibilityNeeded { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CertificateOfEligibilityNeeded-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CertificateOfEligibilityNeeded property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CertificateOfEligibilityNeededSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("garden", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Garden { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Garden-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Garden property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GardenSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("rentSubsidy", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="decimal")]
        public decimal RentSubsidy { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">
    ///        Eigenschaften für den Büro/Praxis Immobilientyp.
    ///      </para>
    /// <para xml:lang="en">
    ///        Elements for the Office realestate type.
    ///      </para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("Office", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class Office : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Bürotyp</para>
        /// <para xml:lang="en">office type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("officeType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.OfficeType OfficeType { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private IS24RestApi.Common.YesNotApplicableType _lift = IS24RestApi.Common.YesNotApplicableType.NOT_APPLICABLE;
        
        /// <summary>
        /// <para xml:lang="de-DE">Personenaufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(IS24RestApi.Common.YesNotApplicableType.NOT_APPLICABLE)]
        [System.Xml.Serialization.XmlElementAttribute("lift", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Lift
        {
            get
            {
                return this._lift;
            }
            set
            {
                this._lift = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">cellar</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cellar", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Cellar { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Cellar-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cellar property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CellarSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">handicapped accessible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("handicappedAccessible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType HandicappedAccessible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HandicappedAccessible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HandicappedAccessible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HandicappedAccessibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bodenbelag</para>
        /// <para xml:lang="en">flooring type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("flooringType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.FlooringType FlooringType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FlooringType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FlooringType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlooringTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaution</para>
        /// <para xml:lang="de-DE">Kaution</para>
        /// <para xml:lang="en">deposite</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("deposit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Deposit { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kantine/Cafeteria</para>
        /// <para xml:lang="en">canteen</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("hasCanteen", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType HasCanteen { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HasCanteen-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasCanteen property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasCanteenSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">DV-Verkabelung</para>
        /// <para xml:lang="en">lan cables</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lanCables", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ItInfrastructureType LanCables { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LanCables-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LanCables property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LanCablesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Starkstrom</para>
        /// <para xml:lang="en">high voltage</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("highVoltage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType HighVoltage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HighVoltage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HighVoltage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HighVoltageSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einbauküche</para>
        /// <para xml:lang="en">kitchen complete</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("kitchenComplete", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType KitchenComplete { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die KitchenComplete-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the KitchenComplete property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KitchenCompleteSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Denkmalschutzobjekt</para>
        /// <para xml:lang="en">monument protection</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("listed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Listed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Listed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Listed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ListedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Klimaanlage</para>
        /// <para xml:lang="en">air condition</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("airConditioning", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.AirConditioningType AirConditioning { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AirConditioning-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AirConditioning property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AirConditioningSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mietdauer</para>
        /// <para xml:lang="en">rent durations</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("officeRentDurations", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("officeRentDuration", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.OfficeRentDuration> OfficeRentDurations { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OfficeRentDurations-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OfficeRentDurations property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OfficeRentDurationsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Office" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Office" /> class.</para>
        /// </summary>
        public Office()
        {
            this.OfficeRentDurations = new Collection<IS24RestApi.Common.OfficeRentDuration>();
            this.FiringTypes = new Collection<IS24RestApi.Common.FiringType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zum Hauptbahnhof.</para>
        /// <para xml:lang="en">The distance to main railway station.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToMRS", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToMRS { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToMRS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToMRS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToMRSSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zur Bundesautobahn.</para>
        /// <para xml:lang="en">The distance to the next federal motorway.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToFM", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToFM { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToFM-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToFM property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToFMSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zu öffentlichen Verkehrsmittel.</para>
        /// <para xml:lang="en">The distance to public transport.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToPT", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToPT { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToPT-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToPT property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToPTSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zum Flughafen.</para>
        /// <para xml:lang="en">The distance to the airport.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToAirport", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToAirport { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToAirport-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToAirport property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToAirportSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("condition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateCondition Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Condition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Parkflächenanzahl</para>
        /// <para xml:lang="en">number of parking spaces</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfParkingSpaces", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfParkingSpaces { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfParkingSpaces-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfParkingSpaces property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfParkingSpacesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz-Kaufpreis</para>
        /// <para xml:lang="en">parking space price</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSpacePrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ParkingSpacePrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingSpacePrice-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingSpacePrice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpacePriceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letzte Modernisierung</para>
        /// <para xml:lang="en">last refurbishment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lastRefurbishment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int LastRefurbishment { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastRefurbishment-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastRefurbishment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefurbishmentSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Qualität der Ausstattung</para>
        /// <para xml:lang="en">interior quality</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("interiorQuality", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.InteriorQuality InteriorQuality { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InteriorQuality-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InteriorQuality property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InteriorQualitySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("constructionYear", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int ConstructionYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionYear-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionYearSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezugsfrei ab</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">free from</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("freeFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FreeFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HeatingType HeatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Befeuerungsarten</para>
        /// <para xml:lang="en">firing types</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("firingTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("firingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.FiringType> FiringTypes { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FiringTypes-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FiringTypes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiringTypesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("thermalCharacteristic", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ThermalCharacteristic { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ThermalCharacteristic-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThermalCharacteristic property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThermalCharacteristicSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyConsumptionContainsWarmWater", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType EnergyConsumptionContainsWarmWater { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyConsumptionContainsWarmWater-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyConsumptionContainsWarmWater property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyConsumptionContainsWarmWaterSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingEnergyRatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BuildingEnergyRatingType BuildingEnergyRatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuildingEnergyRatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuildingEnergyRatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuildingEnergyRatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenfläche</para>
        /// <para xml:lang="en">additional area</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("additionalArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double AdditionalArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AdditionalArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AdditionalArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AdditionalAreaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenzahl (Dieser Wert ist ein String und flexibel (Etagenanzahl
        ///                        oder Etage))
        ///                    </para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">number of floor (this value is a string and flexible (number of
        ///                        floors or floors))
        ///                    </para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfFloors", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string NumberOfFloors { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenkosten</para>
        /// <para xml:lang="en">additional costs</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("additionalCosts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price AdditionalCosts { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aus dem vom Benutzer eingegebenen 'Preis' berechnete
        ///                        Preis-Alternativdarstellung;
        ///                        die Attribute geben die Art, die Währung und den
        ///                        Intervall an
        ///                    </para>
        /// <para xml:lang="en">alternative price representation calculated from the given 'price';
        ///                        the attributes named the type, the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price CalculatedPrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("totalFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetFloorSpaceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinDivisibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("OfficeOfficeRentDurations", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0", AnonymousType=true)]
    public partial class OfficeOfficeRentDurations
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Mietdauer</para>
        /// <para xml:lang="en">rent duration</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("officeRentDuration", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.OfficeRentDuration> OfficeRentDuration { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OfficeRentDuration-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OfficeRentDuration property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OfficeRentDurationSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="OfficeOfficeRentDurations" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OfficeOfficeRentDurations" /> class.</para>
        /// </summary>
        public OfficeOfficeRentDurations()
        {
            this.OfficeRentDuration = new Collection<IS24RestApi.Common.OfficeRentDuration>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">
    ///        Eigenschaften für den Einzelhandel Immobilientyp.
    ///      </para>
    /// <para xml:lang="en">
    ///        Elements for the store realestate type.
    ///      </para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("Store", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class Store : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Einzelhandels-Objektart</para>
        /// <para xml:lang="en">store type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("storeType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.StoreType StoreType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StoreType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StoreType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StoreTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lageart</para>
        /// <para xml:lang="en">location classification type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("locationClassificationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.LocationClassificationType LocationClassificationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LocationClassificationType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LocationClassificationType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LocationClassificationTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED use minDivisible</para>
        /// <para xml:lang="en">DEPRECATED use minDivisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("areaDivisibleFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double AreaDivisibleFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AreaDivisibleFrom-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AreaDivisibleFrom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AreaDivisibleFromSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lageart</para>
        /// <para xml:lang="en">shop window lengst</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shopWindowLength", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ShopWindowLength { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ShopWindowLength-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShopWindowLength property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShopWindowLengthSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Denkmalschutzobjekt</para>
        /// <para xml:lang="en">listed</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("listed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Listed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Listed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Listed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ListedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Personenaufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lift", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Lift { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Lift-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lift property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LiftSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lastenaufzug</para>
        /// <para xml:lang="en">goods lift</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("goodsLift", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType GoodsLift { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GoodsLift-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GoodsLift property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoodsLiftSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lastenaufzug</para>
        /// <para xml:lang="en">goods lift</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("goodsLiftLoad", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double GoodsLiftLoad { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GoodsLiftLoad-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GoodsLiftLoad property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoodsLiftLoadSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Deckenlast</para>
        /// <para xml:lang="en">floor load</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("floorLoad", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double FloorLoad { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FloorLoad-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FloorLoad property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FloorLoadSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Rampe</para>
        /// <para xml:lang="en">ramp</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ramp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Ramp { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Ramp-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ramp property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RampSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">cellar</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cellar", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Cellar { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Cellar-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cellar property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CellarSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zulieferungstyp</para>
        /// <para xml:lang="en">supplyType</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("supplyType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.SupplyType SupplyType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SupplyType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SupplyType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SupplyTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bodenbelag</para>
        /// <para xml:lang="en">flooringType</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("flooringType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.FlooringType FlooringType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FlooringType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FlooringType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlooringTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mietkaution</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("deposit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Deposit { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aus dem vom Benutzer eingegebenen 'Preis' berechnete
        ///                        Preis-Alternativdarstellung;
        ///                        die Attribute geben die Art, die Währung und den
        ///                        Intervall an
        ///                    </para>
        /// <para xml:lang="en">alternative price representation calculated from the given 'price';
        ///                        the attributes named the type, the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price CalculatedPrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("totalFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetFloorSpaceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinDivisibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zum Hauptbahnhof.</para>
        /// <para xml:lang="en">The distance to main railway station.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToMRS", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToMRS { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToMRS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToMRS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToMRSSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zur Bundesautobahn.</para>
        /// <para xml:lang="en">The distance to the next federal motorway.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToFM", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToFM { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToFM-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToFM property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToFMSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zu öffentlichen Verkehrsmittel.</para>
        /// <para xml:lang="en">The distance to public transport.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToPT", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToPT { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToPT-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToPT property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToPTSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zum Flughafen.</para>
        /// <para xml:lang="en">The distance to the airport.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToAirport", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToAirport { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToAirport-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToAirport property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToAirportSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("condition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateCondition Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Condition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Parkflächenanzahl</para>
        /// <para xml:lang="en">number of parking spaces</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfParkingSpaces", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfParkingSpaces { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfParkingSpaces-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfParkingSpaces property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfParkingSpacesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz-Kaufpreis</para>
        /// <para xml:lang="en">parking space price</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSpacePrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ParkingSpacePrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingSpacePrice-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingSpacePrice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpacePriceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letzte Modernisierung</para>
        /// <para xml:lang="en">last refurbishment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lastRefurbishment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int LastRefurbishment { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastRefurbishment-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastRefurbishment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefurbishmentSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Qualität der Ausstattung</para>
        /// <para xml:lang="en">interior quality</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("interiorQuality", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.InteriorQuality InteriorQuality { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InteriorQuality-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InteriorQuality property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InteriorQualitySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("constructionYear", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int ConstructionYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionYear-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionYearSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezugsfrei ab</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">free from</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("freeFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FreeFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HeatingType HeatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Befeuerungsarten</para>
        /// <para xml:lang="en">firing types</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("firingTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("firingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.FiringType> FiringTypes { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FiringTypes-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FiringTypes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiringTypesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Store" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Store" /> class.</para>
        /// </summary>
        public Store()
        {
            this.FiringTypes = new Collection<IS24RestApi.Common.FiringType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("thermalCharacteristic", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ThermalCharacteristic { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ThermalCharacteristic-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThermalCharacteristic property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThermalCharacteristicSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyConsumptionContainsWarmWater", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType EnergyConsumptionContainsWarmWater { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyConsumptionContainsWarmWater-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyConsumptionContainsWarmWater property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyConsumptionContainsWarmWaterSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingEnergyRatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BuildingEnergyRatingType BuildingEnergyRatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuildingEnergyRatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuildingEnergyRatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuildingEnergyRatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenfläche</para>
        /// <para xml:lang="en">additional area</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("additionalArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double AdditionalArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AdditionalArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AdditionalArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AdditionalAreaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenzahl (Dieser Wert ist ein String und flexibel (Etagenanzahl
        ///                        oder Etage))
        ///                    </para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">number of floor (this value is a string and flexible (number of
        ///                        floors or floors))
        ///                    </para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfFloors", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string NumberOfFloors { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenkosten</para>
        /// <para xml:lang="en">additional costs</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("additionalCosts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price AdditionalCosts { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">
    ///        Eigenschaften für den Gastronomie Immobilientyp.
    ///      </para>
    /// <para xml:lang="en">
    ///        Elements for the gastronomy realestate type.
    ///      </para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("Gastronomy", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class Gastronomy : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Gastronomietyp</para>
        /// <para xml:lang="en">type of gastronomy</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("gastronomyType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.GastronomyType GastronomyType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Denkmalschutzobjekt</para>
        /// <para xml:lang="en">listed</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("listed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Listed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Listed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Listed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ListedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Personenaufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lift", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Lift { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Lift-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lift property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LiftSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gastterasse</para>
        /// <para xml:lang="en">terrace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("terrace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Terrace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Terrace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Terrace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TerraceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Plätze Gastraum</para>
        /// <para xml:lang="en">number of seats</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberSeats", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberSeats { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberSeats-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberSeats property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberSeatsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Betten</para>
        /// <para xml:lang="en">number of beds</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberBeds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberBeds { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberBeds-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberBeds property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberBedsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">cellar</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cellar", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Cellar { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Cellar-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cellar property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CellarSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mietkaution</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("deposit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Deposit { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aus dem vom Benutzer eingegebenen 'Preis' berechnete
        ///                        Preis-Alternativdarstellung;
        ///                        die Attribute geben die Art, die Währung und den
        ///                        Intervall an
        ///                    </para>
        /// <para xml:lang="en">alternative price representation calculated from the given 'price';
        ///                        the attributes named the type, the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price CalculatedPrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("totalFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetFloorSpaceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinDivisibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zum Hauptbahnhof.</para>
        /// <para xml:lang="en">The distance to main railway station.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToMRS", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToMRS { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToMRS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToMRS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToMRSSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zur Bundesautobahn.</para>
        /// <para xml:lang="en">The distance to the next federal motorway.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToFM", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToFM { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToFM-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToFM property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToFMSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zu öffentlichen Verkehrsmittel.</para>
        /// <para xml:lang="en">The distance to public transport.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToPT", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToPT { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToPT-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToPT property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToPTSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zum Flughafen.</para>
        /// <para xml:lang="en">The distance to the airport.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToAirport", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToAirport { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToAirport-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToAirport property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToAirportSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("condition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateCondition Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Condition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Parkflächenanzahl</para>
        /// <para xml:lang="en">number of parking spaces</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfParkingSpaces", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfParkingSpaces { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfParkingSpaces-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfParkingSpaces property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfParkingSpacesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz-Kaufpreis</para>
        /// <para xml:lang="en">parking space price</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSpacePrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ParkingSpacePrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingSpacePrice-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingSpacePrice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpacePriceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letzte Modernisierung</para>
        /// <para xml:lang="en">last refurbishment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lastRefurbishment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int LastRefurbishment { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastRefurbishment-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastRefurbishment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefurbishmentSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Qualität der Ausstattung</para>
        /// <para xml:lang="en">interior quality</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("interiorQuality", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.InteriorQuality InteriorQuality { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InteriorQuality-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InteriorQuality property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InteriorQualitySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("constructionYear", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int ConstructionYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionYear-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionYearSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezugsfrei ab</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">free from</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("freeFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FreeFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HeatingType HeatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Befeuerungsarten</para>
        /// <para xml:lang="en">firing types</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("firingTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("firingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.FiringType> FiringTypes { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FiringTypes-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FiringTypes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiringTypesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Gastronomy" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Gastronomy" /> class.</para>
        /// </summary>
        public Gastronomy()
        {
            this.FiringTypes = new Collection<IS24RestApi.Common.FiringType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("thermalCharacteristic", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ThermalCharacteristic { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ThermalCharacteristic-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThermalCharacteristic property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThermalCharacteristicSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyConsumptionContainsWarmWater", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType EnergyConsumptionContainsWarmWater { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyConsumptionContainsWarmWater-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyConsumptionContainsWarmWater property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyConsumptionContainsWarmWaterSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingEnergyRatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BuildingEnergyRatingType BuildingEnergyRatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuildingEnergyRatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuildingEnergyRatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuildingEnergyRatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenfläche</para>
        /// <para xml:lang="en">additional area</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("additionalArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double AdditionalArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AdditionalArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AdditionalArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AdditionalAreaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenzahl (Dieser Wert ist ein String und flexibel (Etagenanzahl
        ///                        oder Etage))
        ///                    </para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">number of floor (this value is a string and flexible (number of
        ///                        floors or floors))
        ///                    </para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfFloors", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string NumberOfFloors { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenkosten</para>
        /// <para xml:lang="en">additional costs</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("additionalCosts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price AdditionalCosts { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">
    ///        Eigenschaften für den Halle/Produktion Immobilientyp.
    ///      </para>
    /// <para xml:lang="en">
    ///        Elements for the industry realestate type.
    ///      </para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("Industry", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class Industry : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Halle-/Produktion-Objektart</para>
        /// <para xml:lang="en">industry type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("industryType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.IndustryType IndustryType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED use minDivisible</para>
        /// <para xml:lang="en">DEPRECATED use minDivisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("areaDivisibleFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double AreaDivisibleFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AreaDivisibleFrom-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AreaDivisibleFrom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AreaDivisibleFromSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PlotArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PlotArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlotAreaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Hallenhoehe</para>
        /// <para xml:lang="en">hall height</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("hallHeight", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double HallHeight { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HallHeight-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HallHeight property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HallHeightSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bodenbelag</para>
        /// <para xml:lang="en">flooring type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("flooringType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.FlooringType FlooringType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FlooringType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FlooringType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlooringTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Rampe</para>
        /// <para xml:lang="en">ramp</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ramp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Ramp { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Ramp-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ramp property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RampSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Personenaufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lift", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Lift { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Lift-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lift property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LiftSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">HebeBühne</para>
        /// <para xml:lang="en">auto lift</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("autoLift", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType AutoLift { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AutoLift-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutoLift property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoLiftSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lastenaufzug</para>
        /// <para xml:lang="en">goods lift</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("goodsLift", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType GoodsLift { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GoodsLift-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GoodsLift property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoodsLiftSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lastenaufzugslast</para>
        /// <para xml:lang="en">goods lift</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("goodsLiftLoad", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double GoodsLiftLoad { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GoodsLiftLoad-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GoodsLiftLoad property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GoodsLiftLoadSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kranbahn</para>
        /// <para xml:lang="en">crane runway</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("craneRunway", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CraneRunway { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CraneRunway-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CraneRunway property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CraneRunwaySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kranbahnlast</para>
        /// <para xml:lang="en">crane runway load</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("craneRunwayLoad", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double CraneRunwayLoad { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CraneRunwayLoad-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CraneRunwayLoad property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CraneRunwayLoadSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Deckenlast</para>
        /// <para xml:lang="en">floor load</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("floorLoad", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double FloorLoad { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FloorLoad-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FloorLoad property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FloorLoadSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Stromanschlusswert</para>
        /// <para xml:lang="en">connected load</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("connectedLoad", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int ConnectedLoad { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConnectedLoad-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConnectedLoad property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConnectedLoadSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mietkaution</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("deposit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Deposit { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aus dem vom Benutzer eingegebenen 'Preis' berechnete
        ///                        Preis-Alternativdarstellung;
        ///                        die Attribute geben die Art, die Währung und den
        ///                        Intervall an
        ///                    </para>
        /// <para xml:lang="en">alternative price representation calculated from the given 'price';
        ///                        the attributes named the type, the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price CalculatedPrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("totalFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetFloorSpaceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinDivisibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zum Hauptbahnhof.</para>
        /// <para xml:lang="en">The distance to main railway station.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToMRS", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToMRS { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToMRS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToMRS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToMRSSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zur Bundesautobahn.</para>
        /// <para xml:lang="en">The distance to the next federal motorway.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToFM", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToFM { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToFM-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToFM property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToFMSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zu öffentlichen Verkehrsmittel.</para>
        /// <para xml:lang="en">The distance to public transport.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToPT", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToPT { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToPT-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToPT property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToPTSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zum Flughafen.</para>
        /// <para xml:lang="en">The distance to the airport.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToAirport", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToAirport { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToAirport-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToAirport property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToAirportSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("condition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateCondition Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Condition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Parkflächenanzahl</para>
        /// <para xml:lang="en">number of parking spaces</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfParkingSpaces", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfParkingSpaces { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfParkingSpaces-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfParkingSpaces property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfParkingSpacesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz-Kaufpreis</para>
        /// <para xml:lang="en">parking space price</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSpacePrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ParkingSpacePrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingSpacePrice-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingSpacePrice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpacePriceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letzte Modernisierung</para>
        /// <para xml:lang="en">last refurbishment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lastRefurbishment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int LastRefurbishment { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastRefurbishment-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastRefurbishment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefurbishmentSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Qualität der Ausstattung</para>
        /// <para xml:lang="en">interior quality</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("interiorQuality", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.InteriorQuality InteriorQuality { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InteriorQuality-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InteriorQuality property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InteriorQualitySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("constructionYear", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int ConstructionYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionYear-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionYearSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezugsfrei ab</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">free from</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("freeFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FreeFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HeatingType HeatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Befeuerungsarten</para>
        /// <para xml:lang="en">firing types</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("firingTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("firingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.FiringType> FiringTypes { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FiringTypes-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FiringTypes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiringTypesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Industry" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Industry" /> class.</para>
        /// </summary>
        public Industry()
        {
            this.FiringTypes = new Collection<IS24RestApi.Common.FiringType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("thermalCharacteristic", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ThermalCharacteristic { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ThermalCharacteristic-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThermalCharacteristic property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThermalCharacteristicSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyConsumptionContainsWarmWater", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType EnergyConsumptionContainsWarmWater { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyConsumptionContainsWarmWater-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyConsumptionContainsWarmWater property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyConsumptionContainsWarmWaterSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingEnergyRatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BuildingEnergyRatingType BuildingEnergyRatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuildingEnergyRatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuildingEnergyRatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuildingEnergyRatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenfläche</para>
        /// <para xml:lang="en">additional area</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("additionalArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double AdditionalArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AdditionalArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AdditionalArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AdditionalAreaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenzahl (Dieser Wert ist ein String und flexibel (Etagenanzahl
        ///                        oder Etage))
        ///                    </para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">number of floor (this value is a string and flexible (number of
        ///                        floors or floors))
        ///                    </para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfFloors", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string NumberOfFloors { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenkosten</para>
        /// <para xml:lang="en">additional costs</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("additionalCosts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price AdditionalCosts { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">
    ///        Eigenschaften fuer den Spezialgewerbe Immobilientyp.
    ///      </para>
    /// <para xml:lang="en">
    ///        Elements for the special purpose realestate type.
    ///      </para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("SpecialPurpose", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class SpecialPurpose : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Spezialgewerbe-Objektart</para>
        /// <para xml:lang="en">special purpose property type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("specialPurposePropertyType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.SpecialPurposeType SpecialPurposePropertyType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED use minDivisible</para>
        /// <para xml:lang="en">DEPRECATED use minDivisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("areaDivisibleFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double AreaDivisibleFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AreaDivisibleFrom-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AreaDivisibleFrom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AreaDivisibleFromSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstuecksflaeche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PlotArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PlotArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlotAreaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Denkmalschutz</para>
        /// <para xml:lang="en">listed</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("listed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Listed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Listed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Listed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ListedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Personenaufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lift", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Lift { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Lift-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lift property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LiftSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">basement</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("basement", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Basement { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Basement-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Basement property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BasementSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bodenbelag</para>
        /// <para xml:lang="en">flooring type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("flooringType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.FlooringType FlooringType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FlooringType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FlooringType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlooringTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mietkaution</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("deposit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Deposit { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aus dem vom Benutzer eingegebenen 'Preis' berechnete
        ///                        Preis-Alternativdarstellung;
        ///                        die Attribute geben die Art, die Währung und den
        ///                        Intervall an
        ///                    </para>
        /// <para xml:lang="en">alternative price representation calculated from the given 'price';
        ///                        the attributes named the type, the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price CalculatedPrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("totalFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetFloorSpaceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinDivisibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zum Hauptbahnhof.</para>
        /// <para xml:lang="en">The distance to main railway station.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToMRS", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToMRS { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToMRS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToMRS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToMRSSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zur Bundesautobahn.</para>
        /// <para xml:lang="en">The distance to the next federal motorway.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToFM", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToFM { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToFM-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToFM property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToFMSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zu öffentlichen Verkehrsmittel.</para>
        /// <para xml:lang="en">The distance to public transport.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToPT", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToPT { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToPT-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToPT property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToPTSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zum Flughafen.</para>
        /// <para xml:lang="en">The distance to the airport.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToAirport", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToAirport { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToAirport-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToAirport property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToAirportSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("condition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateCondition Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Condition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Parkflächenanzahl</para>
        /// <para xml:lang="en">number of parking spaces</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfParkingSpaces", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfParkingSpaces { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfParkingSpaces-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfParkingSpaces property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfParkingSpacesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz-Kaufpreis</para>
        /// <para xml:lang="en">parking space price</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSpacePrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ParkingSpacePrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingSpacePrice-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingSpacePrice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpacePriceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letzte Modernisierung</para>
        /// <para xml:lang="en">last refurbishment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lastRefurbishment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int LastRefurbishment { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastRefurbishment-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastRefurbishment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefurbishmentSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Qualität der Ausstattung</para>
        /// <para xml:lang="en">interior quality</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("interiorQuality", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.InteriorQuality InteriorQuality { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InteriorQuality-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InteriorQuality property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InteriorQualitySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("constructionYear", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int ConstructionYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionYear-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionYearSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezugsfrei ab</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">free from</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("freeFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FreeFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HeatingType HeatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Befeuerungsarten</para>
        /// <para xml:lang="en">firing types</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("firingTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("firingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.FiringType> FiringTypes { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FiringTypes-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FiringTypes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiringTypesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SpecialPurpose" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SpecialPurpose" /> class.</para>
        /// </summary>
        public SpecialPurpose()
        {
            this.FiringTypes = new Collection<IS24RestApi.Common.FiringType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("thermalCharacteristic", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ThermalCharacteristic { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ThermalCharacteristic-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThermalCharacteristic property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThermalCharacteristicSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyConsumptionContainsWarmWater", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType EnergyConsumptionContainsWarmWater { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyConsumptionContainsWarmWater-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyConsumptionContainsWarmWater property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyConsumptionContainsWarmWaterSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingEnergyRatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BuildingEnergyRatingType BuildingEnergyRatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuildingEnergyRatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuildingEnergyRatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuildingEnergyRatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenfläche</para>
        /// <para xml:lang="en">additional area</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("additionalArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double AdditionalArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AdditionalArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AdditionalArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AdditionalAreaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenzahl (Dieser Wert ist ein String und flexibel (Etagenanzahl
        ///                        oder Etage))
        ///                    </para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">number of floor (this value is a string and flexible (number of
        ///                        floors or floors))
        ///                    </para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfFloors", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string NumberOfFloors { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenkosten</para>
        /// <para xml:lang="en">additional costs</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("additionalCosts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price AdditionalCosts { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">
    ///        Eigenschaften fuer den WAZ Immobilientyp.
    ///      </para>
    /// <para xml:lang="en">
    ///        Elements for the ShortTermAccommodation realestate type.
    ///      </para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("ShortTermAccommodation", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class ShortTermAccommodation : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaltmiete</para>
        /// <para xml:lang="en">base rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("baseRent", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double BaseRent { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BaseRent-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BaseRent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BaseRentSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingEnergyRatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BuildingEnergyRatingType BuildingEnergyRatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuildingEnergyRatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuildingEnergyRatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuildingEnergyRatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">cellar</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cellar", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Cellar { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Cellar-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cellar property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CellarSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("condition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateCondition Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Condition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaution</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("deposit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Deposit { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Frei bis</para>
        /// <para xml:lang="en">end rental date</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("endRentalDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
        public System.DateTime EndRentalDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EndRentalDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EndRentalDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EndRentalDateSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyConsumptionContainsWarmWater", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType EnergyConsumptionContainsWarmWater { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyConsumptionContainsWarmWater-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyConsumptionContainsWarmWater property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyConsumptionContainsWarmWaterSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Befeuerungsarten</para>
        /// <para xml:lang="en">firing types</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("firingTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("firingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.FiringType> FiringTypes { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FiringTypes-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FiringTypes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiringTypesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ShortTermAccommodation" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ShortTermAccommodation" /> class.</para>
        /// </summary>
        public ShortTermAccommodation()
        {
            this.FiringTypes = new Collection<IS24RestApi.Common.FiringType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etage</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">floor</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("floor", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Floor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Geschlecht</para>
        /// <para xml:lang="en">gender type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("gender", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.FlatMateGenderType Gender { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Gender-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Gender property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GenderSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gaeste-WC</para>
        /// <para xml:lang="en">guest toilet</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("guestToilet", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool GuestToilet { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuestToilet-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuestToilet property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GuestToiletSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">barrierefrei</para>
        /// <para xml:lang="en">handicapped accessible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("handicappedAccessible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool HandicappedAccessible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HandicappedAccessible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HandicappedAccessible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HandicappedAccessibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Moeblierung</para>
        /// <para xml:lang="en">has furniture</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("hasFurniture", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNoNotApplicableType HasFurniture { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HasFurniture-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HasFurniture property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasFurnitureSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HeatingType HeatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Personenaufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lift", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Lift { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Lift-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lift property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LiftSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">maximale Personenanzahl</para>
        /// <para xml:lang="en">max number of persons</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("maxNumberOfPersons", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int MaxNumberOfPersons { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxNumberOfPersons-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxNumberOfPersons property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxNumberOfPersonsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">maximale Mietdauer</para>
        /// <para xml:lang="en">max rental time</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("maxRentalTime", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MaxRentalTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxRentalTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxRentalTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxRentalTimeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mindestmietdauer</para>
        /// <para xml:lang="en">min rental time</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("minRentalTime", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinRentalTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinRentalTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinRentalTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinRentalTimeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenzahl</para>
        /// <para xml:lang="en">number of floors</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfFloors", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfFloors { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfFloors-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfFloors property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfFloorsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Garagen/Stellplatz</para>
        /// <para xml:lang="en">number of parking spaces</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfParkingSpaces", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfParkingSpaces { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfParkingSpaces-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfParkingSpaces property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfParkingSpacesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/Stellplatz-Miete</para>
        /// <para xml:lang="en">parking space price</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSpacePrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ParkingSpacePrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingSpacePrice-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingSpacePrice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpacePriceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage-/Stellplatzart</para>
        /// <para xml:lang="en">parking space type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSpaceType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ParkingSpaceType ParkingSpaceType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingSpaceType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingSpaceType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpaceTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Haustiere</para>
        /// <para xml:lang="en">pets allowed</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("petsAllowed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.PetsAllowedType PetsAllowed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PetsAllowed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PetsAllowed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PetsAllowedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenkosten</para>
        /// <para xml:lang="en">service charge</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("serviceCharge", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ServiceCharge { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ServiceCharge-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ServiceCharge property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServiceChargeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("thermalCharacteristic", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ThermalCharacteristic { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ThermalCharacteristic-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThermalCharacteristic property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThermalCharacteristicSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED Pauschalmiete, das Element "price" in BaseShortTermAccommodation ist zu benutzen</para>
        /// <para xml:lang="en">DEPRECATED total rent, use the element "price" in BaseShortTermAccommodation</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("totalRent", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalRent { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalRent-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalRent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalRentSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pauschalmiete, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">total rent, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LivingSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LivingSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LivingSpaceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfRooms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfRooms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfRoomsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Frühester Mietbeginn</para>
        /// <para xml:lang="en">earliest time to begin the rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("startRentalDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
        public System.DateTime StartRentalDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("balcony", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Balcony { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Balcony-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Balcony property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BalconySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("garden", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Garden { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Garden-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Garden property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GardenSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Raucher oder Nichtraucher</para>
        /// <para xml:lang="en">if you cannot smoke in the rooms</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("nonSmoker", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool NonSmoker { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NonSmoker-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonSmoker property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NonSmokerSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Typ von Wohnen auf Zeit (Wohnung, Zimmer oder Haus)
        ///                    </para>
        /// <para xml:lang="en">Type of the short term accomodation (apartment, room or house)
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shortTermAccomodationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ShortTermAccommodationType ShortTermAccomodationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">
    ///        Eigenschaften fuer den Typenhaus Immobilientyp.
    ///      </para>
    /// <para xml:lang="en">
    ///        Elements for the HouseType realestate type.
    ///      </para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("HouseType", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class HouseType : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche</para>
        /// <para xml:lang="en">total area</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("totalArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalAreaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundfläche</para>
        /// <para xml:lang="en">base area</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("baseArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double BaseArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BaseArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BaseArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BaseAreaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfRooms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfRooms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfRoomsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bauweise</para>
        /// <para xml:lang="en">construction method</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("constructionMethod", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HouseTypeConstructionMethodType ConstructionMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionMethod-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionMethodSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektart</para>
        /// <para xml:lang="en">object type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HouseTypeBuildingType BuildingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ausbaustufe</para>
        /// <para xml:lang="en">house type stage of extension</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("stageOfCompletionType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HouseTypeStageOfCompletionType StageOfCompletionType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StageOfCompletionType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StageOfCompletionType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StageOfCompletionTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energiestandard</para>
        /// <para xml:lang="en">house type energy standard</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyStandardType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HouseTypeEnergyStandardType EnergyStandardType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyStandardType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyStandardType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyStandardTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">U-Wert (Wärmedämmwert)</para>
        /// <para xml:lang="en">U-Value (thermal connectivity)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("uValue", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double UValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UValue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UValue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Typ Informationen</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">type information note</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("typeInformationNote", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string TypeInformationNote { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Modell Informationen</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">model information note</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("modelInformationNote", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ModelInformationNote { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bauleistungs Informationen</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">contruction price information note</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("contructionPriceInformationNote", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ContructionPriceInformationNote { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Geschoss Informationen</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">floor information note</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("floorInformationNote", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FloorInformationNote { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Dachform Informationen</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">roof information note</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("roofInformationNote", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RoofInformationNote { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">
    ///        Eigenschaften für das Gewerbe-Grundstueck.
    ///      </para>
    /// <para xml:lang="en">
    ///        Elements for the SiteTrade realestate type.
    ///      </para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("TradeSite", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class TradeSite : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">empfohlene Nutzungsarten</para>
        /// <para xml:lang="en">recommended Use Types</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("recommendedUseTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("siteRecommendedUseForTradeType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.SiteRecommendedUseForTradeType> RecommendedUseTypes { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RecommendedUseTypes-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecommendedUseTypes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecommendedUseTypesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TradeSite" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TradeSite" /> class.</para>
        /// </summary>
        public TradeSite()
        {
            this.RecommendedUseTypes = new Collection<IS24RestApi.Common.SiteRecommendedUseForTradeType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzung</para>
        /// <para xml:lang="en">Use</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("utilizationTradeSite", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.UtilizationTradeSite UtilizationTradeSite { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heimfall nach</para>
        /// <para xml:lang="en">tenancy</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("tenancy", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int Tenancy { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tenancy-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tenancy property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TenancySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinDivisibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezugsfrei ab</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">free from</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("freeFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FreeFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gibt an, ob das Grundstueck kurzfristig bebaubar ist
        ///                    </para>
        /// <para xml:lang="en">Indicates whether this area is short term constructible
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shortTermConstructible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool ShortTermConstructible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ShortTermConstructible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShortTermConstructible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShortTermConstructibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baugenehmigung</para>
        /// <para xml:lang="en">Indicates whether there exists a building permission for this area
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingPermission", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BuildingPermission { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuildingPermission-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuildingPermission property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuildingPermissionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Abriss</para>
        /// <para xml:lang="en">Indicates whether demolition is planned</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("demolition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Demolition { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Demolition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Demolition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DemolitionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Erschliessung</para>
        /// <para xml:lang="en">site development type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("siteDevelopmentType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.SiteDevelopmentType SiteDevelopmentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SiteDevelopmentType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SiteDevelopmentType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SiteDevelopmentTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bebaubar nach</para>
        /// <para xml:lang="en">site constructible type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("siteConstructibleType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.SiteConstructibleType SiteConstructibleType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SiteConstructibleType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SiteConstructibleType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SiteConstructibleTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundflaechenzahl</para>
        /// <para xml:lang="en">grz</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("grz", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double Grz { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Grz-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Grz property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrzSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Geschossflaechenzahl</para>
        /// <para xml:lang="en">gfz</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("gfz", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double Gfz { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Gfz-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Gfz property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GfzSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pachtdauer Intervall Type (Nur für den GET Request)
        ///                    </para>
        /// <para xml:lang="en">lease interval (only for the get request)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("leaseInterval", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.LeaseIntervalType LeaseInterval { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LeaseInterval-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LeaseInterval property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeaseIntervalSpecified { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">
    ///        Eigenschaften für das Wohnen-Kauf-Grundstueck.
    ///      </para>
    /// <para xml:lang="en">
    ///        Elements for the LivingBuySite realestate type.
    ///      </para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("LivingBuySite", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class LivingBuySite : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, oder zur
        ///                        Erbpacht steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,LONG_LEASE)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">empfohlene Nutzungsarten</para>
        /// <para xml:lang="en">recommended Use Types</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("recommendedUseTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("siteRecommendedUseType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.SiteRecommendedUseType> RecommendedUseTypes { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RecommendedUseTypes-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecommendedUseTypes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecommendedUseTypesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="LivingBuySite" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LivingBuySite" /> class.</para>
        /// </summary>
        public LivingBuySite()
        {
            this.RecommendedUseTypes = new Collection<IS24RestApi.Common.SiteRecommendedUseType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heimfall nach</para>
        /// <para xml:lang="en">tenancy</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("tenancy", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int Tenancy { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tenancy-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tenancy property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TenancySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinDivisibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezugsfrei ab</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">free from</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("freeFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FreeFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gibt an, ob das Grundstueck kurzfristig bebaubar ist
        ///                    </para>
        /// <para xml:lang="en">Indicates whether this area is short term constructible
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shortTermConstructible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool ShortTermConstructible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ShortTermConstructible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShortTermConstructible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShortTermConstructibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baugenehmigung</para>
        /// <para xml:lang="en">Indicates whether there exists a building permission for this area
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingPermission", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BuildingPermission { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuildingPermission-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuildingPermission property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuildingPermissionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Abriss</para>
        /// <para xml:lang="en">Indicates whether demolition is planned</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("demolition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Demolition { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Demolition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Demolition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DemolitionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Erschliessung</para>
        /// <para xml:lang="en">site development type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("siteDevelopmentType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.SiteDevelopmentType SiteDevelopmentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SiteDevelopmentType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SiteDevelopmentType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SiteDevelopmentTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bebaubar nach</para>
        /// <para xml:lang="en">site constructible type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("siteConstructibleType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.SiteConstructibleType SiteConstructibleType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SiteConstructibleType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SiteConstructibleType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SiteConstructibleTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundflaechenzahl</para>
        /// <para xml:lang="en">grz</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("grz", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double Grz { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Grz-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Grz property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrzSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Geschossflaechenzahl</para>
        /// <para xml:lang="en">gfz</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("gfz", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double Gfz { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Gfz-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Gfz property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GfzSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pachtdauer Intervall Type (Nur für den GET Request)
        ///                    </para>
        /// <para xml:lang="en">lease interval (only for the get request)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("leaseInterval", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.LeaseIntervalType LeaseInterval { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LeaseInterval-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LeaseInterval property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeaseIntervalSpecified { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">
    ///        Eigenschaften für das Wohnen-Miete-Grundstueck.
    ///      </para>
    /// <para xml:lang="en">
    ///        Elements for the LivingRentSite realestate type.
    ///      </para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("LivingRentSite", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class LivingRentSite : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, oder zur
        ///                        Erbpacht steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (RENT, LEASE)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">empfohlene Nutzungsarten</para>
        /// <para xml:lang="en">recommended Use Types</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("recommendedUseTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("siteRecommendedUseType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.SiteRecommendedUseType> RecommendedUseTypes { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RecommendedUseTypes-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RecommendedUseTypes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RecommendedUseTypesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="LivingRentSite" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LivingRentSite" /> class.</para>
        /// </summary>
        public LivingRentSite()
        {
            this.RecommendedUseTypes = new Collection<IS24RestApi.Common.SiteRecommendedUseType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heimfall nach</para>
        /// <para xml:lang="en">tenancy</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("tenancy", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int Tenancy { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tenancy-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Tenancy property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TenancySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinDivisibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezugsfrei ab</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">free from</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("freeFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FreeFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gibt an, ob das Grundstueck kurzfristig bebaubar ist
        ///                    </para>
        /// <para xml:lang="en">Indicates whether this area is short term constructible
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shortTermConstructible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool ShortTermConstructible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ShortTermConstructible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShortTermConstructible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShortTermConstructibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baugenehmigung</para>
        /// <para xml:lang="en">Indicates whether there exists a building permission for this area
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingPermission", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BuildingPermission { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuildingPermission-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuildingPermission property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuildingPermissionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Abriss</para>
        /// <para xml:lang="en">Indicates whether demolition is planned</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("demolition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Demolition { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Demolition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Demolition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DemolitionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Erschliessung</para>
        /// <para xml:lang="en">site development type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("siteDevelopmentType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.SiteDevelopmentType SiteDevelopmentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SiteDevelopmentType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SiteDevelopmentType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SiteDevelopmentTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bebaubar nach</para>
        /// <para xml:lang="en">site constructible type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("siteConstructibleType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.SiteConstructibleType SiteConstructibleType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SiteConstructibleType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SiteConstructibleType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SiteConstructibleTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundflaechenzahl</para>
        /// <para xml:lang="en">grz</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("grz", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double Grz { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Grz-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Grz property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrzSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Geschossflaechenzahl</para>
        /// <para xml:lang="en">gfz</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("gfz", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double Gfz { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Gfz-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Gfz property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GfzSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pachtdauer Intervall Type (Nur für den GET Request)
        ///                    </para>
        /// <para xml:lang="en">lease interval (only for the get request)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("leaseInterval", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.LeaseIntervalType LeaseInterval { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LeaseInterval-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LeaseInterval property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeaseIntervalSpecified { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für das Anlage Objekt.</para>
    /// <para xml:lang="en">Elements for the investment property realestate type.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("InvestmentProperty", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class InvestmentProperty : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">vermietbare Fläche</para>
        /// <para xml:lang="en">area for rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("industrialArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double IndustrialArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IndustrialArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndustrialArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndustrialAreaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PlotArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PlotArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlotAreaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtflaeche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NetFloorSpaceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Arten von Anlageimmobilien-Objekte wie z.B. Einfamilienhäuser,
        ///                        Lager oder Wohnanlagen
        ///                    </para>
        /// <para xml:lang="en">Type for investment objects, like single family houses, storages
        ///                        or housing estates
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("investmentType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.InvestmentType InvestmentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyPerformanceCertificate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool EnergyPerformanceCertificate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyPerformanceCertificate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyPerformanceCertificate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyPerformanceCertificateSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("totalFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalFloorSpaceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche der Immobilie</para>
        /// <para xml:lang="en">living space</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LivingSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LivingSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LivingSpaceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis pro Quadratmeter (Nutzerangabe)</para>
        /// <para xml:lang="en">price per sqm (user defined)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("pricePerSQM", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price PricePerSQM { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaufpreis geteilt durch Mieteinnahmen pro Jahr</para>
        /// <para xml:lang="en">purchase price divided by rent per year</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("priceMultiplier", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PriceMultiplier { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PriceMultiplier-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PriceMultiplier property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PriceMultiplierSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mieteinahmen aktuell.</para>
        /// <para xml:lang="en">current rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("rentalIncomeActual", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price RentalIncomeActual { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mögliche Mieteinahmen.</para>
        /// <para xml:lang="en">possible rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("rentalIncomeTarget", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price RentalIncomeTarget { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nicht umlegbare Kosten.</para>
        /// <para xml:lang="en">not reversible costs</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("otherCosts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price OtherCosts { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Denkmalschutzobjekt</para>
        /// <para xml:lang="en">monument</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("listed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Listed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Listed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Listed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ListedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private IS24RestApi.Common.YesNotApplicableType _lift = IS24RestApi.Common.YesNotApplicableType.NOT_APPLICABLE;
        
        /// <summary>
        /// <para xml:lang="de-DE">Personenaufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(IS24RestApi.Common.YesNotApplicableType.NOT_APPLICABLE)]
        [System.Xml.Serialization.XmlElementAttribute("lift", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Lift
        {
            get
            {
                return this._lift;
            }
            set
            {
                this._lift = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zum Hauptbahnhof.</para>
        /// <para xml:lang="en">The distance to main railway station.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToMRS", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToMRS { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToMRS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToMRS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToMRSSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zur Bundesautobahn.</para>
        /// <para xml:lang="en">The distance to the next federal motorway.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToFM", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToFM { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToFM-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToFM property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToFMSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zu öffentlichen Verkehrsmittel.</para>
        /// <para xml:lang="en">The distance to public transport.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToPT", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToPT { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToPT-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToPT property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToPTSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Entfernung zum Flughafen.</para>
        /// <para xml:lang="en">The distance to the airport.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("distanceToAirport", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistanceToAirport { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistanceToAirport-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistanceToAirport property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DistanceToAirportSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("condition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateCondition Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Condition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Parkflächenanzahl</para>
        /// <para xml:lang="en">number of parking spaces</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfParkingSpaces", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfParkingSpaces { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfParkingSpaces-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfParkingSpaces property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfParkingSpacesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz-Kaufpreis</para>
        /// <para xml:lang="en">parking space price</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSpacePrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ParkingSpacePrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingSpacePrice-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingSpacePrice property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingSpacePriceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letzte Modernisierung</para>
        /// <para xml:lang="en">last refurbishment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lastRefurbishment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int LastRefurbishment { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastRefurbishment-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastRefurbishment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefurbishmentSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Qualität der Ausstattung</para>
        /// <para xml:lang="en">interior quality</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("interiorQuality", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.InteriorQuality InteriorQuality { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InteriorQuality-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InteriorQuality property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InteriorQualitySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("constructionYear", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int ConstructionYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionYear-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionYearSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezugsfrei ab</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">free from</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("freeFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FreeFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HeatingType HeatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Befeuerungsarten</para>
        /// <para xml:lang="en">firing types</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("firingTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("firingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.FiringType> FiringTypes { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FiringTypes-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FiringTypes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiringTypesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="InvestmentProperty" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="InvestmentProperty" /> class.</para>
        /// </summary>
        public InvestmentProperty()
        {
            this.FiringTypes = new Collection<IS24RestApi.Common.FiringType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("thermalCharacteristic", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ThermalCharacteristic { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ThermalCharacteristic-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThermalCharacteristic property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThermalCharacteristicSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energyConsumptionContainsWarmWater", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType EnergyConsumptionContainsWarmWater { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyConsumptionContainsWarmWater-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyConsumptionContainsWarmWater property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergyConsumptionContainsWarmWaterSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("buildingEnergyRatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BuildingEnergyRatingType BuildingEnergyRatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuildingEnergyRatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuildingEnergyRatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BuildingEnergyRatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenfläche</para>
        /// <para xml:lang="en">additional area</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("additionalArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double AdditionalArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AdditionalArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AdditionalArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AdditionalAreaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenzahl (Dieser Wert ist ein String und flexibel (Etagenanzahl
        ///                        oder Etage))
        ///                    </para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">number of floor (this value is a string and flexible (number of
        ///                        floors or floors))
        ///                    </para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfFloors", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string NumberOfFloors { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenkosten</para>
        /// <para xml:lang="en">additional costs</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("additionalCosts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price AdditionalCosts { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für das Garagen zur Miete Objekt.</para>
    /// <para xml:lang="en">Elements for the garages to rent realestate type.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("GarageRent", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class GarageRent : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzfläche</para>
        /// <para xml:lang="en">area, you can use from this real estate typ</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("usableFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double UsableFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UsableFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsableFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsableFloorSpaceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Verfügbar ab</para>
        /// <para xml:lang="en">free from</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("freeFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
        public System.DateTime FreeFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FreeFrom-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FreeFrom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreeFromSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Verfügbar bis</para>
        /// <para xml:lang="en">free until</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("freeUntil", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
        public System.DateTime FreeUntil { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FreeUntil-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FreeUntil property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreeUntilSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garagentyp</para>
        /// <para xml:lang="en">The garage type (BUY,LONG_LEASE)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("garageType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.GarageType GarageType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "9999")]
        [System.Xml.Serialization.XmlElementAttribute("constructionYear", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int ConstructionYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionYear-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionYearSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garagenlänge</para>
        /// <para xml:lang="en">length of the garage</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lengthGarage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LengthGarage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LengthGarage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LengthGarage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthGarageSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garagenbreite</para>
        /// <para xml:lang="en">width of the garage</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("widthGarage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double WidthGarage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WidthGarage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WidthGarage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthGarageSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garagenhöhe</para>
        /// <para xml:lang="en">height of the garage</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heightGarage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double HeightGarage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeightGarage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeightGarage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightGarageSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("condition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateCondition Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Condition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letzte Modernisierung</para>
        /// <para xml:lang="en">last refurbishment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lastRefurbishment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int LastRefurbishment { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastRefurbishment-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastRefurbishment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefurbishmentSpecified { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für das Garagen zum Kauf Objekt.</para>
    /// <para xml:lang="en">Elements for the garages to buy realestate type.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("GarageBuy", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class GarageBuy : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzfläche</para>
        /// <para xml:lang="en">area, you can use from this real estate typ</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("usableFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double UsableFloorSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UsableFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsableFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsableFloorSpaceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garagentyp</para>
        /// <para xml:lang="en">The garage type (BUY,LONG_LEASE)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("garageType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.GarageType GarageType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "9999")]
        [System.Xml.Serialization.XmlElementAttribute("constructionYear", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int ConstructionYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionYear-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionYearSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garagenlänge</para>
        /// <para xml:lang="en">length of the garage</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lengthGarage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LengthGarage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LengthGarage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LengthGarage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthGarageSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garagenbreite</para>
        /// <para xml:lang="en">width of the garage</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("widthGarage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double WidthGarage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WidthGarage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WidthGarage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthGarageSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garagenhöhe</para>
        /// <para xml:lang="en">height of the garage</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heightGarage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double HeightGarage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeightGarage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeightGarage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightGarageSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("condition", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateCondition Condition { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Condition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Condition property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConditionSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letzte Modernisierung</para>
        /// <para xml:lang="en">last refurbishment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lastRefurbishment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int LastRefurbishment { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastRefurbishment-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastRefurbishment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRefurbishmentSpecified { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für Pflegeheim Objekte.</para>
    /// <para xml:lang="en">Elements for the senior care realestate type.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("SeniorCare", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class SeniorCare : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Kurzbeschreibung</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">short report about the real estate type</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shortDescription", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShortDescription { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Haustiere erlaubt</para>
        /// <para xml:lang="en">pets are allowed in the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("petsAllowed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.PetsAllowedType PetsAllowed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Probewohnen</para>
        /// <para xml:lang="en">test living in the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("trialLivingPossible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType TrialLivingPossible { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("careTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("careType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Collection<IS24RestApi.Common.CareType> CareTypes { get; private set; }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SeniorCare" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SeniorCare" /> class.</para>
        /// </summary>
        public SeniorCare()
        {
            this.CareTypes = new Collection<IS24RestApi.Common.CareType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflegestufe</para>
        /// <para xml:lang="en">Care level</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("careLevel", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CareLevelExpose CareLevel { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bettenanzahl</para>
        /// <para xml:lang="en">number of beds</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfBeds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfBeds { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfBeds-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfBeds property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfBedsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Eroeffnung/Bezug</para>
        /// <para xml:lang="en">Opening</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("opening", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
        public System.DateTime Opening { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Opening-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Opening property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OpeningSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflege von Demenz Patienten</para>
        /// <para xml:lang="en">Care of dementia patients</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("careOfDementia", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CareOfDementia { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CareOfDementia-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CareOfDementia property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CareOfDementiaSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflege von kuenstlicher Beatmung</para>
        /// <para xml:lang="en">Care of artificial respiration</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("careOfArtificialRespiration", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CareOfArtificialRespiration { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CareOfArtificialRespiration-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CareOfArtificialRespiration property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CareOfArtificialRespirationSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflege von Wachkoma</para>
        /// <para xml:lang="en">Care of coma vigil</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("careOfComaVigil", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CareOfComaVigil { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CareOfComaVigil-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CareOfComaVigil property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CareOfComaVigilSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflege von Schlaganfall</para>
        /// <para xml:lang="en">Care of stroke patients</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("careOfStroke", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CareOfStroke { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CareOfStroke-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CareOfStroke property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CareOfStrokeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflege von Parkinson Patienten</para>
        /// <para xml:lang="en">Care of Parkinson patients</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("careOfParkinson", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CareOfParkinson { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CareOfParkinson-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CareOfParkinson property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CareOfParkinsonSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflege von Alzheimer Patienten</para>
        /// <para xml:lang="en">Care of Alzheimer patients</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("careOfAlzheimer", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CareOfAlzheimer { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CareOfAlzheimer-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CareOfAlzheimer property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CareOfAlzheimerSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflege von Multipler Sklerosis</para>
        /// <para xml:lang="en">Care of Multiple Sclerosis</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("careOfMultipleSclerosis", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CareOfMultipleSclerosis { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CareOfMultipleSclerosis-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CareOfMultipleSclerosis property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CareOfMultipleSclerosisSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Hauseigene Küche verfügbar</para>
        /// <para xml:lang="en">Kitchen available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("kitchenAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType KitchenAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die KitchenAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the KitchenAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool KitchenAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmertyp</para>
        /// <para xml:lang="en">Room type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("roomType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RoomType RoomType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RoomType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RoomType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoomTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Therapieangebot verfügbar</para>
        /// <para xml:lang="en">Therapy offerings available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("therapyOfferingsAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType TherapyOfferingsAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TherapyOfferingsAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TherapyOfferingsAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TherapyOfferingsAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">barriere free</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("barrierFree", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType BarrierFree { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BarrierFree-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BarrierFree property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BarrierFreeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl betreute Wohnungen</para>
        /// <para xml:lang="en">number of apartments that are looked after</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfLookedAfterApartments", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfLookedAfterApartments { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfLookedAfterApartments-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfLookedAfterApartments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfLookedAfterApartmentsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Pflegeplätze</para>
        /// <para xml:lang="en">Number of the nursing places</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfNursingPlaces", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfNursingPlaces { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfNursingPlaces-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfNursingPlaces property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfNursingPlacesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche von</para>
        /// <para xml:lang="en">Living space to</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpaceFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpaceFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LivingSpaceFrom-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LivingSpaceFrom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LivingSpaceFromSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche bis</para>
        /// <para xml:lang="en">Living space to</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpaceTo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpaceTo { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LivingSpaceTo-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LivingSpaceTo property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LivingSpaceToSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Behindertengerecht</para>
        /// <para xml:lang="en">handicapped accessible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("handicappedAccessible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType HandicappedAccessible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HandicappedAccessible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HandicappedAccessible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HandicappedAccessibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gästeappartments verfügbar</para>
        /// <para xml:lang="en">Guest apartments available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("guestApartmentsAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType GuestApartmentsAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuestApartmentsAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuestApartmentsAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GuestApartmentsAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Restaurant/ Café verfügbar</para>
        /// <para xml:lang="en">Restaurant available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("restaurantAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType RestaurantAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RestaurantAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RestaurantAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RestaurantAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Eigene Kochmöglichkeit</para>
        /// <para xml:lang="en">Cooking facilities available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cookingFacilitiesAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CookingFacilitiesAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CookingFacilitiesAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CookingFacilitiesAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CookingFacilitiesAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mitnahme eigener Möbel möglich</para>
        /// <para xml:lang="en">Own furniture possible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ownFurniturePossible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType OwnFurniturePossible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OwnFurniturePossible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OwnFurniturePossible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OwnFurniturePossibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Reinigungsservice verfügbar</para>
        /// <para xml:lang="en">Cleaning service available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cleaningServiceAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CleaningServiceAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CleaningServiceAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CleaningServiceAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CleaningServiceAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einkaufsmöglichkeiten im Haus</para>
        /// <para xml:lang="en">Shopping facilities available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shoppingFacilitiesAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType ShoppingFacilitiesAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ShoppingFacilitiesAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShoppingFacilitiesAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShoppingFacilitiesAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">24 Stunden Sicherheit</para>
        /// <para xml:lang="en">security 24 hours</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("security24Hours", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Security24Hours { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Security24Hours-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Security24Hours property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Security24HoursSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kulturprogramm verfügbar</para>
        /// <para xml:lang="en">cultural program available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("culturalProgramAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CulturalProgramAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CulturalProgramAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CulturalProgramAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CulturalProgramAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Freizeitaktivitäten verfügbar</para>
        /// <para xml:lang="en">leisureActivitiesAvailable</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("leisureActivitiesAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType LeisureActivitiesAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LeisureActivitiesAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LeisureActivitiesAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeisureActivitiesAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Religiöse Angebote</para>
        /// <para xml:lang="en">Religious offerings available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("religiousOfferingsAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType ReligiousOfferingsAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReligiousOfferingsAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReligiousOfferingsAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReligiousOfferingsAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmertyp</para>
        /// <para xml:lang="en">Room type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("balconyAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BalconyAvailableType BalconyAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BalconyAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalconyAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BalconyAvailableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _branchEntry = false;
        
        /// <summary>
        /// <para xml:lang="de-DE">Branchenbucheintrag</para>
        /// <para xml:lang="en">listed in yellow pages</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Xml.Serialization.XmlElementAttribute("branchEntry", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BranchEntry
        {
            get
            {
                return this._branchEntry;
            }
            set
            {
                this._branchEntry = value;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für Seniorenwohnen Objekte.</para>
    /// <para xml:lang="en">Elements for the assisted living realestate type.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("AssistedLiving", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class AssistedLiving : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Kurzbeschreibung</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">short report about the real estate type</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shortDescription", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShortDescription { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Haustiere erlaubt</para>
        /// <para xml:lang="en">pets are allowed in the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("petsAllowed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.PetsAllowedType PetsAllowed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Probewohnen</para>
        /// <para xml:lang="en">test living in the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("trialLivingPossible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType TrialLivingPossible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart (Miete, Kauf oder Pacht)</para>
        /// <para xml:lang="en">The Type of the marketing (rent, buy or lease)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("marketingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.MarketingType MarketingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Seniorenwohnen Typ</para>
        /// <para xml:lang="en">The Type of the facility</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("facilityType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.FacilityType FacilityType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimaler Mietpreis; die Attribute geben die Art, die Währung und
        ///                        den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Minimal rent; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("minBaseRent", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price MinBaseRent { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimaler Kaufpreis; die Attribute geben die Art, die Währung und
        ///                        den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Minimal purchase price; the attributes named the type, the currency
        ///                        and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("minPurchasePrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price MinPurchasePrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">Contruction year</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("constructionYear", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int ConstructionYear { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionYear-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionYear property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConstructionYearSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED numberOfRoomsFrom benutzen</para>
        /// <para xml:lang="en">DEPRECATED use numberOfRoomsFrom</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("roomAvailableFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double RoomAvailableFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RoomAvailableFrom-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RoomAvailableFrom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoomAvailableFromSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED numberOfRoomsTo benutzen</para>
        /// <para xml:lang="en">DEPRECATED use numberOfRoomsTo</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("roomAvailableTo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double RoomAvailableTo { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RoomAvailableTo-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RoomAvailableTo property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoomAvailableToSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED cookingFacilitiesAvailable benutzen</para>
        /// <para xml:lang="en">DEPRECATED use cookingFacilitiesAvailable</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cookingPossibilty", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CookingPossibilty { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CookingPossibilty-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CookingPossibilty property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CookingPossibiltySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz verfügbar</para>
        /// <para xml:lang="en">Garage/parking available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType ParkingAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParkingAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParkingAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParkingAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gemeinschaftsräume verfügbar</para>
        /// <para xml:lang="en">Common rooms available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commonRoomsAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CommonRoomsAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CommonRoomsAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CommonRoomsAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommonRoomsAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gartenanlage/Park verfügbar</para>
        /// <para xml:lang="en">Garden/park available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("gardenAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType GardenAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GardenAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GardenAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GardenAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Fitnessraum verfügbar</para>
        /// <para xml:lang="en">Fitness room available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("fitnessAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType FitnessAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FitnessAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FitnessAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FitnessAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Schwimmbad verfügbar</para>
        /// <para xml:lang="en">pool available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("poolAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType PoolAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PoolAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PoolAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PoolAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Öffentl. Verkehrsmittel fußläufig erreichbar verfügbar
        ///                    </para>
        /// <para xml:lang="en">Public transportation in walking distance available
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("publicTransportationAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType PublicTransportationAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublicTransportationAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublicTransportationAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PublicTransportationAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ambulanter Pflegedienst verfügbar</para>
        /// <para xml:lang="en">Ambulant nursing service available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ambulantNursingServiceAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType AmbulantNursingServiceAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AmbulantNursingServiceAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AmbulantNursingServiceAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmbulantNursingServiceAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bewohnernotruf im Zimmer verfügbar</para>
        /// <para xml:lang="en">Emergency call in room available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("emergencyCallInRoomAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType EmergencyCallInRoomAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EmergencyCallInRoomAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmergencyCallInRoomAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmergencyCallInRoomAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Durchgehend besetzter Empfang</para>
        /// <para xml:lang="en">Reception is manned at all times</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("receptionManned", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType ReceptionManned { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReceptionManned-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReceptionManned property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReceptionMannedSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Med. Betreuung vor Ort verfügbar</para>
        /// <para xml:lang="en">Medical assistance on site available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("medicalAssistanceAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType MedicalAssistanceAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MedicalAssistanceAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MedicalAssistanceAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MedicalAssistanceAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Haushaltshilfen verfügbar</para>
        /// <para xml:lang="en">Home help available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("homeHelpAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType HomeHelpAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HomeHelpAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HomeHelpAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HomeHelpAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Seelsorgerische Betreuung verfügbar</para>
        /// <para xml:lang="en">Counseling available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("counselingAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CounselingAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CounselingAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CounselingAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CounselingAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohndarlehen verfügbar</para>
        /// <para xml:lang="en">loans available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("loansAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType LoansAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LoansAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LoansAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LoansAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl von</para>
        /// <para xml:lang="de-DE">Anzahl Räume Typ zur Validierung</para>
        /// <para xml:lang="en">count of rooms from</para>
        /// <para xml:lang="en">number of room type for validation</para>
        /// <para xml:lang="en">Total number of digits: 6.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.5.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0.5", "9999")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfRoomsFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal NumberOfRoomsFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfRoomsFrom-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfRoomsFrom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfRoomsFromSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl bis</para>
        /// <para xml:lang="de-DE">Anzahl Räume Typ zur Validierung</para>
        /// <para xml:lang="en">count of rooms to</para>
        /// <para xml:lang="en">number of room type for validation</para>
        /// <para xml:lang="en">Total number of digits: 6.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.5.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0.5", "9999")]
        [System.Xml.Serialization.XmlElementAttribute("numberOfRoomsTo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal NumberOfRoomsTo { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfRoomsTo-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfRoomsTo property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfRoomsToSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">barriere free</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("barrierFree", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType BarrierFree { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BarrierFree-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BarrierFree property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BarrierFreeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl betreute Wohnungen</para>
        /// <para xml:lang="en">number of apartments that are looked after</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfLookedAfterApartments", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfLookedAfterApartments { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfLookedAfterApartments-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfLookedAfterApartments property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfLookedAfterApartmentsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Pflegeplätze</para>
        /// <para xml:lang="en">Number of the nursing places</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfNursingPlaces", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfNursingPlaces { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfNursingPlaces-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfNursingPlaces property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfNursingPlacesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche von</para>
        /// <para xml:lang="en">Living space to</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpaceFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpaceFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LivingSpaceFrom-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LivingSpaceFrom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LivingSpaceFromSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche bis</para>
        /// <para xml:lang="en">Living space to</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpaceTo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpaceTo { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LivingSpaceTo-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LivingSpaceTo property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LivingSpaceToSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Behindertengerecht</para>
        /// <para xml:lang="en">handicapped accessible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("handicappedAccessible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType HandicappedAccessible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HandicappedAccessible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HandicappedAccessible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HandicappedAccessibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gästeappartments verfügbar</para>
        /// <para xml:lang="en">Guest apartments available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("guestApartmentsAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType GuestApartmentsAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuestApartmentsAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuestApartmentsAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GuestApartmentsAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Restaurant/ Café verfügbar</para>
        /// <para xml:lang="en">Restaurant available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("restaurantAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType RestaurantAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RestaurantAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RestaurantAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RestaurantAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Eigene Kochmöglichkeit</para>
        /// <para xml:lang="en">Cooking facilities available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cookingFacilitiesAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CookingFacilitiesAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CookingFacilitiesAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CookingFacilitiesAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CookingFacilitiesAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mitnahme eigener Möbel möglich</para>
        /// <para xml:lang="en">Own furniture possible</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ownFurniturePossible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType OwnFurniturePossible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OwnFurniturePossible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OwnFurniturePossible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OwnFurniturePossibleSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Reinigungsservice verfügbar</para>
        /// <para xml:lang="en">Cleaning service available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cleaningServiceAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CleaningServiceAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CleaningServiceAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CleaningServiceAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CleaningServiceAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einkaufsmöglichkeiten im Haus</para>
        /// <para xml:lang="en">Shopping facilities available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shoppingFacilitiesAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType ShoppingFacilitiesAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ShoppingFacilitiesAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShoppingFacilitiesAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShoppingFacilitiesAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">24 Stunden Sicherheit</para>
        /// <para xml:lang="en">security 24 hours</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("security24Hours", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Security24Hours { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Security24Hours-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Security24Hours property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Security24HoursSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kulturprogramm verfügbar</para>
        /// <para xml:lang="en">cultural program available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("culturalProgramAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CulturalProgramAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CulturalProgramAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CulturalProgramAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CulturalProgramAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Freizeitaktivitäten verfügbar</para>
        /// <para xml:lang="en">leisureActivitiesAvailable</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("leisureActivitiesAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType LeisureActivitiesAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LeisureActivitiesAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LeisureActivitiesAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeisureActivitiesAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Religiöse Angebote</para>
        /// <para xml:lang="en">Religious offerings available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("religiousOfferingsAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType ReligiousOfferingsAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReligiousOfferingsAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReligiousOfferingsAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReligiousOfferingsAvailableSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmertyp</para>
        /// <para xml:lang="en">Room type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("balconyAvailable", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BalconyAvailableType BalconyAvailable { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BalconyAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BalconyAvailable property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BalconyAvailableSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _branchEntry = false;
        
        /// <summary>
        /// <para xml:lang="de-DE">Branchenbucheintrag</para>
        /// <para xml:lang="en">listed in yellow pages</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Xml.Serialization.XmlElementAttribute("branchEntry", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BranchEntry
        {
            get
            {
                return this._branchEntry;
            }
            set
            {
                this._branchEntry = value;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für WG Zimmer Objekte.</para>
    /// <para xml:lang="en">Elements for the flat share room realestate type.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("FlatShareRoom", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class FlatShareRoom : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmerfläche</para>
        /// <para xml:lang="en">room size</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("roomSize", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double RoomSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bodenbelag</para>
        /// <para xml:lang="en">flooring type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("flooringType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.FlooringType FlooringType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FlooringType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FlooringType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlooringTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Räume</para>
        /// <para xml:lang="en">number of rooms</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfRooms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfRooms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfRoomsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnungstyp</para>
        /// <para xml:lang="en">apartment type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("apartmentType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ApartmentType ApartmentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApartmentType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApartmentType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApartmentTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller verfügbar</para>
        /// <para xml:lang="en">cellar available</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cellar", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Cellar { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Cellar-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cellar property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CellarSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HeatingType HeatingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingTypeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">barriere free</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("barrierFree", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType BarrierFree { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BarrierFree-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BarrierFree property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BarrierFreeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaltmiete</para>
        /// <para xml:lang="en">base rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("baseRent", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double BaseRent { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Warmmiete</para>
        /// <para xml:lang="en">total rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("totalRent", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalRent { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalRent-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalRent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalRentSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenkosten</para>
        /// <para xml:lang="en">service charge</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("serviceCharge", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ServiceCharge { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ServiceCharge-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ServiceCharge property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServiceChargeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaution</para>
        /// <para xml:lang="de-DE">Kaution</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("deposit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Deposit { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungskosten</para>
        /// <para xml:lang="en">heating costs</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingCosts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double HeatingCosts { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingCosts-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingCosts property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingCostsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizkosten in Nebenkosten enthalten</para>
        /// <para xml:lang="en">heating costs in service charge</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("heatingCostsInServiceCharge", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType HeatingCostsInServiceCharge { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingCostsInServiceCharge-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingCostsInServiceCharge property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeatingCostsInServiceChargeSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Verfügbar ab</para>
        /// <para xml:lang="en">free from</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("freeFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
        public System.DateTime FreeFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FreeFrom-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FreeFrom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreeFromSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Verfügbar bis</para>
        /// <para xml:lang="en">free until</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("freeUntil", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
        public System.DateTime FreeUntil { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FreeUntil-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FreeUntil property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreeUntilSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mindest Mietdauer in Monaten</para>
        /// <para xml:lang="en">minimum term of lease in months</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("minimumTermOfLease", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int MinimumTermOfLease { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinimumTermOfLease-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinimumTermOfLease property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MinimumTermOfLeaseSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche</para>
        /// <para xml:lang="en">total space</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("totalSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalSpaceSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der männlichen Mitbewohner</para>
        /// <para xml:lang="en">number of male flat mates</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfMaleFlatMates", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfMaleFlatMates { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfMaleFlatMates-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfMaleFlatMates property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfMaleFlatMatesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der weiblichen Mitbewohner</para>
        /// <para xml:lang="en">number of female flat mates</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfFemaleFlatMates", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfFemaleFlatMates { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfFemaleFlatMates-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfFemaleFlatMates property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfFemaleFlatMatesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Alter Mitbewohner von</para>
        /// <para xml:lang="en">age of flat mates from</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ageOfFlatMatesFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int AgeOfFlatMatesFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AgeOfFlatMatesFrom-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AgeOfFlatMatesFrom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AgeOfFlatMatesFromSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Alter Mitbewohner bis</para>
        /// <para xml:lang="en">age of flat mates to</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ageOfFlatMatesTo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int AgeOfFlatMatesTo { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AgeOfFlatMatesTo-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AgeOfFlatMatesTo property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AgeOfFlatMatesToSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Alter gesuchter Mitbewohner von</para>
        /// <para xml:lang="en">age of requested flat mates from</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ageOfRequestedFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int AgeOfRequestedFrom { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AgeOfRequestedFrom-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AgeOfRequestedFrom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AgeOfRequestedFromSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Alter gesuchter Mitbewohner bis</para>
        /// <para xml:lang="en">age of requested flat mates to</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ageOfRequestedTo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int AgeOfRequestedTo { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AgeOfRequestedTo-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AgeOfRequestedTo property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AgeOfRequestedToSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl gesuchter Mitbewohner</para>
        /// <para xml:lang="en">number of requested flat mates</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfRequestedFlatMates", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfRequestedFlatMates { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfRequestedFlatMates-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfRequestedFlatMates property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfRequestedFlatMatesSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etage in der sich die WG befindet</para>
        /// <para xml:lang="en">floor the flat share is in</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("floor", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int Floor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Floor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Floor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FloorSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Etagen</para>
        /// <para xml:lang="en">number of floors</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfFloors", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfFloors { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfFloors-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfFloors property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfFloorsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Badezimmer</para>
        /// <para xml:lang="en">number of bath rooms</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfBathRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfBathRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfBathRooms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfBathRooms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfBathRoomsSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">balcony</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("balcony", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Balcony { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Balcony-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Balcony property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BalconySpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">garden</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("garden", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Garden { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Garden-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Garden property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GardenSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lift", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Lift { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Lift-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lift property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LiftSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Backofen</para>
        /// <para xml:lang="en">oven</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("oven", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Oven { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Oven-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Oven property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OvenSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kühlschrank</para>
        /// <para xml:lang="en">refrigerator</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("refrigerator", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Refrigerator { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Refrigerator-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Refrigerator property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RefrigeratorSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Herd</para>
        /// <para xml:lang="en">stove</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("stove", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Stove { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Stove-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Stove property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StoveSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Spülmaschine</para>
        /// <para xml:lang="en">dishwasher</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("dishwasher", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType Dishwasher { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Dishwasher-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Dishwasher property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DishwasherSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Waschmaschine</para>
        /// <para xml:lang="en">washingMachine</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("washingMachine", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType WashingMachine { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WashingMachine-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WashingMachine property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WashingMachineSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bad enthält ein Klo</para>
        /// <para xml:lang="en">bath has a toilet</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("bathHasWc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType BathHasWc { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BathHasWc-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BathHasWc property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BathHasWcSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bad enthält eine Dusche</para>
        /// <para xml:lang="en">bath has a shower</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("bathHasShower", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType BathHasShower { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BathHasShower-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BathHasShower property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BathHasShowerSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bad enthält eine Badewanne</para>
        /// <para xml:lang="en">bath has a tub</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("bathHasTub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType BathHasTub { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BathHasTub-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BathHasTub property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BathHasTubSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gästeklo</para>
        /// <para xml:lang="en">guest toilet</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("guestToilet", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType GuestToilet { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuestToilet-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuestToilet property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GuestToiletSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Haustiere erlaubt</para>
        /// <para xml:lang="en">pets are allowed in the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("petsAllowed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.PetsAllowedType PetsAllowed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Art des Internetanschlusses</para>
        /// <para xml:lang="en">type of internet connection</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("internetConnection", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.InternetConnectionType InternetConnection { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Rauchen erlaubt</para>
        /// <para xml:lang="en">smoking allowed</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("smokingAllowed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.SmokingAllowedType SmokingAllowed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Geschlecht des gesuchten Mitbewohners</para>
        /// <para xml:lang="en">requested gender</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("requestedGender", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.FlatMateGenderType RequestedGender { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Art der Möblierung</para>
        /// <para xml:lang="en">furnishing type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("furnishing", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNoNotApplicableType Furnishing { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Art des Fernsehanschlusses</para>
        /// <para xml:lang="en">tv connection</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("tvConnection", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.TvConnectionType TvConnection { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Art des Telefonanschlusses</para>
        /// <para xml:lang="en">telephone connection</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("telephoneConnection", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.TelephoneConnectionType TelephoneConnection { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Parktplatzsituation</para>
        /// <para xml:lang="en">parking situation</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parkingSituation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ParkingSituationType ParkingSituation { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">WG-Größe. 11 bedeuted alle WGs die größer als 10 sind!
        ///                    </para>
        /// <para xml:lang="de-DE">WG-Größe</para>
        /// <para xml:lang="en">flat share size. 11 means all flat share greater then 10!
        ///                    </para>
        /// <para xml:lang="en">flat share size</para>
        /// <para xml:lang="en">Total number of digits: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 2.</para>
        /// <para xml:lang="en">Maximum inclusive value: 11.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "2", "11")]
        [System.Xml.Serialization.XmlElementAttribute("flatShareSize", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int FlatShareSize { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für Zwangsversteigerung Objekte.</para>
    /// <para xml:lang="en">Elements for the compulsory auction realestate type.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.5101.29074")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute("CompulsoryAuction", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    public partial class CompulsoryAuction : ExposeRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Marktwert der Immobilie, die Attribute geben die Art, die Währung
        ///                        und den Intervall an
        ///                    </para>
        /// <para xml:lang="en">Market value of the real estate, the attributes named the type,
        ///                        the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("marketValue", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price MarketValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mindestangebot zur Immobilie, die Attribute geben die Art, die
        ///                        Währung und den Intervall an
        ///                    </para>
        /// <para xml:lang="en">The lowest bid for the real estate, the attributes named the type,
        ///                        the currency and the interval.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lowestBid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price LowestBid { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _recurrenceAppointment = false;
        
        /// <summary>
        /// <para xml:lang="de-DE">Wiederholungstermin (Zweiter Termin)</para>
        /// <para xml:lang="en">Second date for the auction</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Xml.Serialization.XmlElementAttribute("recurrenceAppointment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool RecurrenceAppointment
        {
            get
            {
                return this._recurrenceAppointment;
            }
            set
            {
                this._recurrenceAppointment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der Auktion</para>
        /// <para xml:lang="en">date of auction</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("dateOfAuction", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
        public System.DateTime DateOfAuction { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Änderung</para>
        /// <para xml:lang="en">last cahnge date</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lastChangeDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
        public System.DateTime LastChangeDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastChangeDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastChangeDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastChangeDateSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aufhebungsdatum</para>
        /// <para xml:lang="en">date of cancellation</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cancellationDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
        public System.DateTime CancellationDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CancellationDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CancellationDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CancellationDateSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Erfassungsdatum</para>
        /// <para xml:lang="en">date of recordation</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("recordationDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
        public System.DateTime RecordationDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Fläche, unterschiedlich je nach Typ</para>
        /// <para xml:lang="en">area, different per type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("area", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double Area { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektart der Auktion</para>
        /// <para xml:lang="en">object type of the auction</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("auctionObjectType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CompulsoryAuctionType AuctionObjectType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Das Amtsgericht das für die Auktion verantwortlich ist
        ///                    </para>
        /// <para xml:lang="en">the county court responsible for the auction</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("countyCourt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CountyCourt CountyCourt { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Das Aktenzeichen beim Amtsgericht</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">the file reference at the county court</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("fileReferenceAtCountyCourt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FileReferenceAtCountyCourt { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundbuchsblatt-Nummer</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">number of folio</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfFolio", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string NumberOfFolio { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _splittingAuction = false;
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilungsversteigerung</para>
        /// <para xml:lang="en">splitting auction</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Xml.Serialization.XmlElementAttribute("splittingAuction", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool SplittingAuction
        {
            get
            {
                return this._splittingAuction;
            }
            set
            {
                this._splittingAuction = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Besitzer des zu versteigernden Objekts</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">Owner of the object to be auctioned</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("owner", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Owner { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
}
